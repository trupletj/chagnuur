
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.2.0
 * Query Engine version: 2804dc98259d2ea960602aca6b8e7fdc03c1758f
 */
Prisma.prismaVersion = {
  client: "5.2.0",
  engine: "2804dc98259d2ea960602aca6b8e7fdc03c1758f"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.B_file_anywhereScalarFieldEnum = {
  id: 'id',
  file_table_id: 'file_table_id',
  file_table_name: 'file_table_name',
  image_path: 'image_path',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name'
};

exports.Prisma.B_user_model_action_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  model_id: 'model_id',
  model_name: 'model_name',
  action: 'action',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BarimtScalarFieldEnum = {
  id: 'id',
  barimt_number: 'barimt_number',
  padan_number: 'padan_number',
  branch_id: 'branch_id',
  to_branch_id: 'to_branch_id',
  related_barimt_id: 'related_barimt_id',
  related_barimt_number: 'related_barimt_number',
  related_padan_number: 'related_padan_number',
  is_credit: 'is_credit',
  total_amount: 'total_amount',
  confirmed_total_amount: 'confirmed_total_amount',
  total_quantity: 'total_quantity',
  confirmed_total_quantity: 'confirmed_total_quantity',
  is_confirm: 'is_confirm',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id',
  updated_user_id: 'updated_user_id'
};

exports.Prisma.Basket_itemsScalarFieldEnum = {
  id: 'id',
  good_id: 'good_id',
  basket_id: 'basket_id',
  user_id: 'user_id',
  good_unit_price: 'good_unit_price',
  quantity: 'quantity',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BasketsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_active: 'is_active'
};

exports.Prisma.BeansScalarFieldEnum = {
  id: 'id',
  name: 'name',
  body_text: 'body_text',
  intro_text: 'intro_text',
  origin: 'origin',
  region: 'region',
  processing: 'processing',
  altitude: 'altitude',
  harvest_period: 'harvest_period',
  variety: 'variety',
  tasting_note: 'tasting_note',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  home_image: 'home_image',
  profile_image: 'profile_image'
};

exports.Prisma.Branch_has_real_goodScalarFieldEnum = {
  id: 'id',
  branch_id: 'branch_id',
  real_good_id: 'real_good_id',
  price_avg: 'price_avg',
  available_count: 'available_count',
  hold_count: 'hold_count',
  confirmed_price_avg: 'confirmed_price_avg',
  confirmed_available_count: 'confirmed_available_count',
  confirmed_hold_count: 'confirmed_hold_count',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id',
  updated_user_id: 'updated_user_id'
};

exports.Prisma.BranchesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_stock: 'is_stock',
  address: 'address',
  created_at: 'created_at',
  updated_at: 'updated_at',
  image_path: 'image_path',
  sort_order: 'sort_order',
  prefix: 'prefix',
  body_text: 'body_text',
  lat: 'lat',
  lng: 'lng'
};

exports.Prisma.CalendarsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  category_id: 'category_id',
  start: 'start',
  end: 'end',
  description: 'description',
  allDay: 'allDay',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  parent_id: 'parent_id',
  order: 'order',
  name: 'name',
  slug: 'slug',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Coffee_bean_logsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  import_id: 'import_id',
  day_date: 'day_date',
  weight: 'weight',
  type: 'type',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Coffee_grindersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  body: 'body',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Coffee_importsScalarFieldEnum = {
  id: 'id',
  bean_id: 'bean_id',
  bean_name: 'bean_name',
  import_date: 'import_date',
  total_weight: 'total_weight',
  roasted_weight: 'roasted_weight',
  saled_weight: 'saled_weight',
  other_weight: 'other_weight',
  available_weight: 'available_weight',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name'
};

exports.Prisma.Coffee_packagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  weight: 'weight',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Coffee_roastsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  body: 'body',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Coffee_status_historiesScalarFieldEnum = {
  id: 'id',
  coffee_unit_id: 'coffee_unit_id',
  status_id: 'status_id',
  status_name: 'status_name',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Coffee_statusesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Coffee_unitsScalarFieldEnum = {
  id: 'id',
  bean_id: 'bean_id',
  bean_name: 'bean_name',
  package_id: 'package_id',
  package_name: 'package_name',
  roast_id: 'roast_id',
  roast_name: 'roast_name',
  grinder_id: 'grinder_id',
  grinder_name: 'grinder_name',
  last_branch_id: 'last_branch_id',
  branch_name: 'branch_name',
  status_id: 'status_id',
  status_name: 'status_name',
  unit_price: 'unit_price',
  weight: 'weight',
  roast_date: 'roast_date',
  package_date: 'package_date',
  created_at: 'created_at',
  updated_at: 'updated_at',
  import_name: 'import_name',
  import_id: 'import_id',
  generate_count: 'generate_count',
  is_print: 'is_print'
};

exports.Prisma.CoffeesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  image_path: 'image_path',
  category_id: 'category_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  body_text: 'body_text',
  intro_text: 'intro_text',
  price: 'price'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image: 'image',
  description: 'description',
  information: 'information',
  tags: 'tags',
  certificate_template: 'certificate_template',
  has_certificate: 'has_certificate',
  exam_id: 'exam_id',
  doctor_point: 'doctor_point',
  web_point: 'web_point',
  main_price: 'main_price',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id',
  updated_user_id: 'updated_user_id'
};

exports.Prisma.Data_rowsScalarFieldEnum = {
  id: 'id',
  data_type_id: 'data_type_id',
  field: 'field',
  type: 'type',
  display_name: 'display_name',
  required: 'required',
  browse: 'browse',
  read: 'read',
  edit: 'edit',
  add: 'add',
  delete: 'delete',
  details: 'details',
  order: 'order'
};

exports.Prisma.Data_typesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  display_name_singular: 'display_name_singular',
  display_name_plural: 'display_name_plural',
  icon: 'icon',
  model_name: 'model_name',
  policy_name: 'policy_name',
  controller: 'controller',
  description: 'description',
  generate_permissions: 'generate_permissions',
  server_side: 'server_side',
  details: 'details',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DiscountScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  name: 'name',
  course_percent: 'course_percent',
  course_amount: 'course_amount',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  number: 'number',
  intro: 'intro',
  attachment: 'attachment',
  company_id: 'company_id',
  company_name: 'company_name',
  company_register: 'company_register',
  status_id: 'status_id',
  document_name: 'document_name',
  document_date: 'document_date',
  document_end_date: 'document_end_date',
  category_id: 'category_id',
  category_name: 'category_name',
  type_id: 'type_id',
  type_name: 'type_name',
  encrypt: 'encrypt',
  blank_number: 'blank_number',
  user_id: 'user_id',
  template_id: 'template_id',
  created_by: 'created_by',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Document_categoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  type_id: 'type_id',
  type_name: 'type_name',
  document_template: 'document_template',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Document_statusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  is_last: 'is_last',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Document_status_historyScalarFieldEnum = {
  id: 'id',
  status_id: 'status_id',
  status_name: 'status_name',
  document_id: 'document_id',
  document_name: 'document_name',
  description: 'description',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Document_templateScalarFieldEnum = {
  id: 'id',
  template_text: 'template_text',
  template_name: 'template_name',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Document_typeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Employee_requestScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  status_id: 'status_id',
  start_date: 'start_date',
  end_date: 'end_date',
  title: 'title',
  body: 'body',
  image_path: 'image_path',
  created_at: 'created_at',
  updated_at: 'updated_at',
  category_id: 'category_id'
};

exports.Prisma.Employee_request_categoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  body: 'body',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Employee_request_statusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ExamScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  topic_id: 'topic_id',
  lesson_id: 'lesson_id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FaqsScalarFieldEnum = {
  id: 'id',
  question: 'question',
  answer: 'answer',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.G_address_cityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_address_districtScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  city_id: 'city_id',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at',
  bus_price: 'bus_price'
};

exports.Prisma.G_anketScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  id_card_address_id: 'id_card_address_id',
  ads_id: 'ads_id',
  current_address_id: 'current_address_id',
  organization_id: 'organization_id',
  personal_id: 'personal_id',
  order_id: 'order_id',
  available_date: 'available_date',
  min_salary: 'min_salary',
  max_salary: 'max_salary',
  work_on_country: 'work_on_country',
  how_to_known: 'how_to_known',
  mobile_number: 'mobile_number',
  work_number: 'work_number',
  home_number: 'home_number',
  health_info: 'health_info',
  is_sent: 'is_sent',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  is_confirm: 'is_confirm',
  confirmed_at: 'confirmed_at',
  confirm_user_id: 'confirm_user_id',
  is_interview: 'is_interview',
  is_job_exam: 'is_job_exam',
  is_skill_exam: 'is_skill_exam',
  is_job: 'is_job',
  retired_at: 'retired_at',
  sent_at: 'sent_at',
  pdf_created: 'pdf_created',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_english: 'is_english',
  is_easy: 'is_easy'
};

exports.Prisma.G_anket_decisionScalarFieldEnum = {
  id: 'id',
  anket_id: 'anket_id',
  user_id: 'user_id',
  decision_user_id: 'decision_user_id',
  type: 'type',
  position_id: 'position_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_awardScalarFieldEnum = {
  anket_id: 'anket_id',
  award_id: 'award_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_direction_contactScalarFieldEnum = {
  anket_id: 'anket_id',
  direction_contact_id: 'direction_contact_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_educationScalarFieldEnum = {
  anket_id: 'anket_id',
  education_id: 'education_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_familyScalarFieldEnum = {
  anket_id: 'anket_id',
  family_id: 'family_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_fileScalarFieldEnum = {
  anket_id: 'anket_id',
  file_id: 'file_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_languageScalarFieldEnum = {
  anket_id: 'anket_id',
  language_id: 'language_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_related_personScalarFieldEnum = {
  anket_id: 'anket_id',
  related_person_id: 'related_person_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_skillScalarFieldEnum = {
  anket_id: 'anket_id',
  skill_id: 'skill_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_softwareScalarFieldEnum = {
  anket_id: 'anket_id',
  software_id: 'software_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_sportScalarFieldEnum = {
  anket_id: 'anket_id',
  sport_id: 'sport_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_trainingScalarFieldEnum = {
  anket_id: 'anket_id',
  training_id: 'training_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_has_workScalarFieldEnum = {
  anket_id: 'anket_id',
  work_id: 'work_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_interested_positionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  anket_id: 'anket_id',
  position_id: 'position_id',
  department_id: 'department_id',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_anket_related_personScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  anket_id: 'anket_id',
  who_is_your: 'who_is_your',
  name: 'name',
  position: 'position',
  phone: 'phone',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_commandScalarFieldEnum = {
  id: 'id',
  template_id: 'template_id',
  command_number: 'command_number',
  command_index: 'command_index',
  user_id: 'user_id',
  anket_id: 'anket_id',
  organization_id: 'organization_id',
  type: 'type',
  created_by: 'created_by',
  user_lastname: 'user_lastname',
  user_firstname: 'user_firstname',
  user_register_number: 'user_register_number',
  body: 'body',
  created_at: 'created_at',
  updated_at: 'updated_at',
  havstralt_file: 'havstralt_file',
  page_size: 'page_size',
  is_trash: 'is_trash',
  is_active: 'is_active',
  is_draft: 'is_draft',
  start_at: 'start_at',
  start_date: 'start_date',
  end_date: 'end_date',
  gazar_id: 'gazar_id',
  document_date: 'document_date',
  document_status_id: 'document_status_id',
  updated_user_id: 'updated_user_id',
  created_user_id: 'created_user_id'
};

exports.Prisma.G_command_attribute_valueScalarFieldEnum = {
  id: 'id',
  command_id: 'command_id',
  attribute_id: 'attribute_id',
  name: 'name',
  type: 'type',
  slug: 'slug',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_command_fileScalarFieldEnum = {
  id: 'id',
  command_id: 'command_id',
  name: 'name',
  file_path: 'file_path',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_contractScalarFieldEnum = {
  id: 'id',
  contract_number: 'contract_number',
  contract_index: 'contract_index',
  user_id: 'user_id',
  organization_id: 'organization_id',
  template_id: 'template_id',
  anket_id: 'anket_id',
  is_active: 'is_active',
  is_draft: 'is_draft',
  is_trash: 'is_trash',
  start_at: 'start_at',
  expired_type: 'expired_type',
  expired_detail: 'expired_detail',
  expired_at: 'expired_at',
  user_address: 'user_address',
  user_familyname: 'user_familyname',
  user_lastname: 'user_lastname',
  user_firstname: 'user_firstname',
  user_register_number: 'user_register_number',
  created_by: 'created_by',
  body: 'body',
  created_at: 'created_at',
  updated_at: 'updated_at',
  havstralt_file: 'havstralt_file',
  page_size: 'page_size',
  tushaal_dugaar: 'tushaal_dugaar',
  gazar_id: 'gazar_id',
  document_date: 'document_date',
  document_status_id: 'document_status_id',
  end_at: 'end_at'
};

exports.Prisma.G_contract_attribute_valueScalarFieldEnum = {
  id: 'id',
  contract_id: 'contract_id',
  attribute_id: 'attribute_id',
  name: 'name',
  type: 'type',
  slug: 'slug',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_contract_fileScalarFieldEnum = {
  id: 'id',
  contract_id: 'contract_id',
  name: 'name',
  file_path: 'file_path',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_contract_property_detailScalarFieldEnum = {
  id: 'id',
  contract_id: 'contract_id',
  user_id: 'user_id',
  property_name: 'property_name',
  property_count: 'property_count',
  property_unit: 'property_unit',
  property_rating: 'property_rating',
  property_date: 'property_date',
  is_active: 'is_active',
  is_trash: 'is_trash',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_contract_typeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_document_statusScalarFieldEnum = {
  id: 'id',
  type: 'type',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_templateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  body: 'body',
  is_active: 'is_active',
  is_endable: 'is_endable',
  created_by: 'created_by',
  organization_id: 'organization_id',
  type: 'type',
  created_at: 'created_at',
  updated_at: 'updated_at',
  page_size: 'page_size',
  gazar_id: 'gazar_id'
};

exports.Prisma.G_template_attributeScalarFieldEnum = {
  id: 'id',
  template_id: 'template_id',
  name: 'name',
  type: 'type',
  slug: 'slug',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_addressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  city_id: 'city_id',
  district_id: 'district_id',
  street: 'street',
  address: 'address',
  type: 'type',
  is_map: 'is_map',
  longitude: 'longitude',
  latitude: 'latitude',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_awardScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  given_organization: 'given_organization',
  taken_year: 'taken_year',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_direction_contactScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  who_is_your: 'who_is_your',
  phone: 'phone',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at',
  work: 'work'
};

exports.Prisma.G_user_educationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  location: 'location',
  school_name: 'school_name',
  start_year: 'start_year',
  end_year: 'end_year',
  major: 'major',
  degree: 'degree',
  avarage: 'avarage',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_familyScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  who_is_your: 'who_is_your',
  name: 'name',
  birthday: 'birthday',
  birthplace: 'birthplace',
  major: 'major',
  organization_name: 'organization_name',
  job_position: 'job_position',
  phone: 'phone',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at',
  register_number: 'register_number',
  address: 'address'
};

exports.Prisma.G_user_fileScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  description: 'description',
  file_path: 'file_path',
  type: 'type',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_gazarScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  gazar_id: 'gazar_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_group_historyScalarFieldEnum = {
  id: 'id',
  worker_id: 'worker_id',
  group_id: 'group_id',
  created_by: 'created_by',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_has_jobScalarFieldEnum = {
  id: 'id',
  anket_id: 'anket_id',
  user_id: 'user_id',
  organization_id: 'organization_id',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_languageScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  duration: 'duration',
  duration_unit: 'duration_unit',
  listening: 'listening',
  speaking: 'speaking',
  reading: 'reading',
  level: 'level',
  exam: 'exam',
  exam_point: 'exam_point',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_organizationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  organization_id: 'organization_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_out_categoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type_id: 'type_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_out_category_typeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_personalScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  familyname: 'familyname',
  lastname: 'lastname',
  firstname: 'firstname',
  gender: 'gender',
  birthday: 'birthday',
  email: 'email',
  register_number: 'register_number',
  driver_license_has: 'driver_license_has',
  driver_license_number: 'driver_license_number',
  driver_license_classes: 'driver_license_classes',
  driver_license_other: 'driver_license_other',
  driver_license_given_year: 'driver_license_given_year',
  file_path: 'file_path',
  has_own_car: 'has_own_car',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_tsereg: 'is_tsereg',
  birthplace: 'birthplace',
  is_married: 'is_married',
  yas_undes: 'yas_undes',
  photo: 'photo'
};

exports.Prisma.G_user_related_personScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  related_user_id: 'related_user_id',
  who_is_your: 'who_is_your',
  name: 'name',
  department: 'department',
  position: 'position',
  phone: 'phone',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_trash: 'is_trash'
};

exports.Prisma.G_user_skillScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  your_skill: 'your_skill',
  need_skill: 'need_skill',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_softwareScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  level: 'level',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_sportScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  practice_year: 'practice_year',
  level: 'level',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_statsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  interview_count: 'interview_count',
  interview_duration: 'interview_duration',
  interview_lead_count: 'interview_lead_count',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.G_user_trainingScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  location: 'location',
  school_name: 'school_name',
  learning_date: 'learning_date',
  learning_time: 'learning_time',
  learning_unit: 'learning_unit',
  is_trash: 'is_trash',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at',
  learning_skill: 'learning_skill'
};

exports.Prisma.G_user_workScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  organization_name: 'organization_name',
  organization_area: 'organization_area',
  position_name: 'position_name',
  position_role: 'position_role',
  award: 'award',
  main_salary: 'main_salary',
  bonus_salary: 'bonus_salary',
  over_salary: 'over_salary',
  other_salary: 'other_salary',
  total_salary: 'total_salary',
  phone_salary: 'phone_salary',
  transport_salary: 'transport_salary',
  in_date: 'in_date',
  out_date: 'out_date',
  director_name: 'director_name',
  director_position_name: 'director_position_name',
  director_phone: 'director_phone',
  enjoy: 'enjoy',
  un_enjoy: 'un_enjoy',
  out_cause: 'out_cause',
  created_by: 'created_by',
  updated_by: 'updated_by',
  is_active: 'is_active',
  is_trash: 'is_trash',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_ndsh: 'is_ndsh'
};

exports.Prisma.G_user_work_timeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_shift: 'is_shift',
  start_at: 'start_at',
  end_at: 'end_at',
  start_at_second: 'start_at_second',
  end_at_second: 'end_at_second',
  created_at: 'created_at',
  updated_at: 'updated_at',
  branch_id: 'branch_id',
  duration: 'duration'
};

exports.Prisma.G_user_work_typeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Good_parent_attributesScalarFieldEnum = {
  id: 'id',
  good_parent_id: 'good_parent_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  body: 'body',
  image: 'image',
  type_id: 'type_id'
};

exports.Prisma.Good_parentsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image_path: 'image_path',
  is_shop: 'is_shop',
  body_text: 'body_text',
  created_at: 'created_at',
  updated_at: 'updated_at',
  slug: 'slug',
  mn_name: 'mn_name',
  mn_body_text: 'mn_body_text',
  is_show_in_site: 'is_show_in_site'
};

exports.Prisma.Good_sizesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Good_typesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  body_text: 'body_text'
};

exports.Prisma.GoodsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  sort_order: 'sort_order',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at',
  price: 'price',
  parent_good_id: 'parent_good_id',
  size_id: 'size_id',
  type_id: 'type_id',
  image_path: 'image_path',
  is_available_shop: 'is_available_shop',
  introduction_pdf: 'introduction_pdf'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  description: 'description',
  user_id: 'user_id',
  main_amount: 'main_amount',
  paid_amount: 'paid_amount',
  discount: 'discount',
  hash: 'hash',
  number: 'number',
  qpay_json: 'qpay_json',
  account_bank_name: 'account_bank_name',
  account_number: 'account_number',
  amount: 'amount',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Invoice_itemsScalarFieldEnum = {
  id: 'id',
  good_id: 'good_id',
  invoice_id: 'invoice_id',
  order_id: 'order_id',
  unit_price: 'unit_price',
  quantity: 'quantity',
  total_price: 'total_price',
  organization_id: 'organization_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  phone: 'phone'
};

exports.Prisma.InvoicesScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  user_id: 'user_id',
  organization_id: 'organization_id',
  number: 'number',
  grand_total: 'grand_total',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_paid: 'is_paid',
  hash: 'hash',
  qpay_json: 'qpay_json',
  phone: 'phone',
  approve_code: 'approve_code',
  is_approved: 'is_approved',
  active_time: 'active_time'
};

exports.Prisma.Job_positionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  topic_id: 'topic_id',
  free_to_view: 'free_to_view',
  name: 'name',
  video_name: 'video_name',
  video_link: 'video_link',
  description: 'description',
  information: 'information',
  full_text: 'full_text',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id'
};

exports.Prisma.Menu_itemsScalarFieldEnum = {
  id: 'id',
  menu_id: 'menu_id',
  title: 'title',
  url: 'url',
  target: 'target',
  icon_class: 'icon_class',
  color: 'color',
  parent_id: 'parent_id',
  order: 'order',
  created_at: 'created_at',
  updated_at: 'updated_at',
  route: 'route',
  parameters: 'parameters'
};

exports.Prisma.MenusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  message: 'message',
  subject: 'subject',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MigrationsScalarFieldEnum = {
  id: 'id',
  migration: 'migration',
  batch: 'batch'
};

exports.Prisma.Order_itemsScalarFieldEnum = {
  id: 'id',
  good_id: 'good_id',
  quantity: 'quantity',
  unit_price: 'unit_price',
  total_price: 'total_price',
  order_id: 'order_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  phone: 'phone'
};

exports.Prisma.Order_statusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Order_status_historyScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  status_id: 'status_id',
  status_name: 'status_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  organization_id: 'organization_id',
  is_payed: 'is_payed',
  status_id: 'status_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  phone: 'phone',
  approve_code: 'approve_code',
  address: 'address',
  griner_type: 'griner_type',
  receiver_name: 'receiver_name',
  company_name: 'company_name',
  company_register: 'company_register',
  is_approved: 'is_approved',
  active_time: 'active_time',
  grinder_type: 'grinder_type',
  total_price: 'total_price',
  total_quantity: 'total_quantity',
  total_good: 'total_good'
};

exports.Prisma.OrganizationsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Our_teamsScalarFieldEnum = {
  id: 'id',
  firstname: 'firstname',
  lastname: 'lastname',
  insta_link: 'insta_link',
  job_title: 'job_title',
  profile_image: 'profile_image',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Page_cardScalarFieldEnum = {
  id: 'id',
  section_id: 'section_id',
  order: 'order',
  is_active: 'is_active',
  name: 'name',
  image: 'image',
  link: 'link',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id'
};

exports.Prisma.Page_sectionScalarFieldEnum = {
  id: 'id',
  order: 'order',
  is_before_main_content: 'is_before_main_content',
  page_name: 'page_name',
  name: 'name',
  image: 'image',
  link: 'link',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id'
};

exports.Prisma.PagesScalarFieldEnum = {
  id: 'id',
  author_id: 'author_id',
  title: 'title',
  excerpt: 'excerpt',
  body: 'body',
  image: 'image',
  slug: 'slug',
  meta_description: 'meta_description',
  meta_keywords: 'meta_keywords',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  total: 'total',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at',
  invoice_id: 'invoice_id'
};

exports.Prisma.Permission_roleScalarFieldEnum = {
  permission_id: 'permission_id',
  role_id: 'role_id'
};

exports.Prisma.PermissionsScalarFieldEnum = {
  id: 'id',
  key: 'key',
  table_name: 'table_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Personal_access_tokensScalarFieldEnum = {
  id: 'id',
  tokenable_type: 'tokenable_type',
  tokenable_id: 'tokenable_id',
  name: 'name',
  token: 'token',
  abilities: 'abilities',
  last_used_at: 'last_used_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PostsScalarFieldEnum = {
  id: 'id',
  author_id: 'author_id',
  category_id: 'category_id',
  title: 'title',
  seo_title: 'seo_title',
  excerpt: 'excerpt',
  body: 'body',
  image: 'image',
  slug: 'slug',
  meta_description: 'meta_description',
  meta_keywords: 'meta_keywords',
  status: 'status',
  featured: 'featured',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Punch_logScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  branch_id: 'branch_id',
  device_id: 'device_id',
  lat: 'lat',
  lng: 'lng',
  day_date: 'day_date',
  time: 'time',
  created_at: 'created_at',
  updated_at: 'updated_at',
  punch_type: 'punch_type',
  end_time: 'end_time',
  work_duration: 'work_duration',
  image_path: 'image_path'
};

exports.Prisma.Real_goodScalarFieldEnum = {
  id: 'id',
  name: 'name',
  bean_id: 'bean_id',
  bean_name: 'bean_name',
  package_id: 'package_id',
  package_name: 'package_name',
  unit_price: 'unit_price',
  sanhuu_dugaar: 'sanhuu_dugaar',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id',
  updated_user_id: 'updated_user_id'
};

exports.Prisma.Real_good_transactionScalarFieldEnum = {
  id: 'id',
  branch_id: 'branch_id',
  to_branch_id: 'to_branch_id',
  related_transaction_id: 'related_transaction_id',
  real_good_id: 'real_good_id',
  price_avg: 'price_avg',
  credit_count: 'credit_count',
  debit_count: 'debit_count',
  confirmed_price_avg: 'confirmed_price_avg',
  confirmed_credit_count: 'confirmed_credit_count',
  confirmed_debit_count: 'confirmed_debit_count',
  is_confirm: 'is_confirm',
  barimt_id: 'barimt_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id',
  updated_user_id: 'updated_user_id'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  display_name: 'display_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  category_id: 'category_id',
  name: 'name',
  description: 'description',
  body: 'body',
  image_path: 'image_path',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Service_categoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  body: 'body',
  image_path: 'image_path',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  key: 'key',
  display_name: 'display_name',
  value: 'value',
  details: 'details',
  type: 'type',
  order: 'order',
  group: 'group'
};

exports.Prisma.Sf_guard_groupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  organization_id: 'organization_id',
  cheif_id: 'cheif_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sf_guard_userScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email_address: 'email_address',
  username: 'username',
  is_active: 'is_active',
  is_confirm: 'is_confirm',
  phone: 'phone',
  address: 'address',
  profile_image: 'profile_image',
  organization_id: 'organization_id',
  sector_id: 'sector_id',
  department_id: 'department_id',
  position_id: 'position_id',
  nas: 'nas',
  huis: 'huis',
  ndd: 'ndd',
  emdd: 'emdd',
  ajillasan_jil: 'ajillasan_jil',
  register_number: 'register_number',
  geree_ehelsen: 'geree_ehelsen',
  geree_duusah: 'geree_duusah',
  kart_dugaar: 'kart_dugaar',
  dans_dugaar: 'dans_dugaar',
  created_at: 'created_at',
  updated_at: 'updated_at',
  birthday: 'birthday',
  alban_tushaal_id: 'alban_tushaal_id',
  job_type_id: 'job_type_id',
  position_name: 'position_name',
  group_reason: 'group_reason',
  command_number: 'command_number',
  description: 'description',
  status_id: 'status_id',
  out_category_id: 'out_category_id',
  out_text: 'out_text',
  work_time_id: 'work_time_id',
  out_category_type_id: 'out_category_type_id',
  work_type_id: 'work_type_id',
  department_name: 'department_name',
  group_name: 'group_name',
  employee_id: 'employee_id',
  employee_code: 'employee_code',
  password: 'password',
  degree_name: 'degree_name',
  major_name: 'major_name',
  atk: 'atk',
  yamat: 'yamat',
  in_date: 'in_date',
  contract_number: 'contract_number',
  work_year_bonus: 'work_year_bonus',
  food_bonus: 'food_bonus',
  road_bonus: 'road_bonus',
  distance_work: 'distance_work',
  out_date: 'out_date',
  fb_user_id: 'fb_user_id'
};

exports.Prisma.Sf_guard_user_additional_timeScalarFieldEnum = {
  id: 'id',
  branch_id: 'branch_id',
  service_id: 'service_id',
  approved_user_id: 'approved_user_id',
  user_id: 'user_id',
  udur_tsag_ajil: 'udur_tsag_ajil',
  iluu_tsag: 'iluu_tsag',
  udur_tsag_amralt: 'udur_tsag_amralt',
  shunu_tsag_ajil: 'shunu_tsag_ajil',
  shunu_tsag_amralt: 'shunu_tsag_amralt',
  udur_tsag_bayar: 'udur_tsag_bayar',
  shunu_tsag_bayar: 'shunu_tsag_bayar',
  sul_zogsolt: 'sul_zogsolt',
  day_zam_tsag: 'day_zam_tsag',
  travel_zam_tsag: 'travel_zam_tsag',
  work_duration: 'work_duration',
  iluu_tsag_night: 'iluu_tsag_night',
  iluu_tsag_day: 'iluu_tsag_day',
  day_date: 'day_date',
  start_at_punch: 'start_at_punch',
  end_at_punch: 'end_at_punch',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sf_guard_user_branchScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  branch_id: 'branch_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  start_at: 'start_at',
  end_at: 'end_at',
  start_at_second: 'start_at_second',
  end_at_second: 'end_at_second',
  devices: 'devices'
};

exports.Prisma.Sf_guard_user_device_on_branchScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  branch_id: 'branch_id',
  mac_address: 'mac_address',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sf_guard_user_groupScalarFieldEnum = {
  user_id: 'user_id',
  group_id: 'group_id',
  organization_id: 'organization_id',
  role: 'role',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sf_guard_user_work_day_logScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  branch_id: 'branch_id',
  day_date: 'day_date',
  start_at: 'start_at',
  end_at: 'end_at',
  start_at_second: 'start_at_second',
  end_at_second: 'end_at_second',
  start_at_punch: 'start_at_punch',
  end_at_punch: 'end_at_punch',
  start_at_second_punch: 'start_at_second_punch',
  end_at_second_punch: 'end_at_second_punch',
  work_duration: 'work_duration',
  work_duration_second: 'work_duration_second',
  work_duration_sum: 'work_duration_sum',
  iluu_tsag: 'iluu_tsag',
  iluu_tsag_approved: 'iluu_tsag_approved',
  is_hotsorson: 'is_hotsorson',
  is_ert_tarsan: 'is_ert_tarsan',
  status_id: 'status_id',
  must_punch: 'must_punch',
  work_time_multi: 'work_time_multi',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_by: 'created_by',
  work_time_id: 'work_time_id'
};

exports.Prisma.Sms_logScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  message_id: 'message_id',
  code: 'code',
  text: 'text',
  phone: 'phone',
  active_time: 'active_time',
  result: 'result',
  result_data: 'result_data',
  created_at: 'created_at',
  updated_at: 'updated_at',
  order_information: 'order_information'
};

exports.Prisma.Stock_balancesScalarFieldEnum = {
  id: 'id',
  stock_id: 'stock_id',
  good_id: 'good_id',
  unit_price: 'unit_price',
  quantity: 'quantity',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Stock_goodsScalarFieldEnum = {
  id: 'id',
  stock_id: 'stock_id',
  good_id: 'good_id',
  unit_price: 'unit_price',
  quantity: 'quantity',
  total_price: 'total_price',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id'
};

exports.Prisma.TeacherScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  organization: 'organization',
  position: 'position',
  major: 'major',
  image: 'image',
  course_count: 'course_count',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TopicScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  name: 'name',
  exam_id: 'exam_id',
  description: 'description',
  information: 'information',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_user_id: 'created_user_id'
};

exports.Prisma.Transaction_itemsScalarFieldEnum = {
  id: 'id',
  good_id: 'good_id',
  quantity: 'quantity',
  stock_id: 'stock_id',
  to_stock_id: 'to_stock_id',
  user_id: 'user_id',
  to_user_id: 'to_user_id',
  transaction_at: 'transaction_at',
  is_active: 'is_active',
  unit_price: 'unit_price',
  created_at: 'created_at',
  updated_at: 'updated_at',
  transaction_id: 'transaction_id',
  type: 'type'
};

exports.Prisma.Transaction_typesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TransactionsScalarFieldEnum = {
  id: 'id',
  number: 'number',
  user_id: 'user_id',
  to_user_id: 'to_user_id',
  stock_id: 'stock_id',
  related_stock_id: 'related_stock_id',
  transaction_at: 'transaction_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_confirmed: 'is_confirmed',
  item_count: 'item_count',
  type: 'type',
  related_transaction_id: 'related_transaction_id',
  order_id: 'order_id',
  description: 'description'
};

exports.Prisma.TranslationsScalarFieldEnum = {
  id: 'id',
  table_name: 'table_name',
  column_name: 'column_name',
  foreign_key: 'foreign_key',
  locale: 'locale',
  value: 'value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Tsalin_main_reportScalarFieldEnum = {
  id: 'id',
  start_date: 'start_date',
  end_date: 'end_date',
  description: 'description',
  created_hr: 'created_hr',
  approved_chief: 'approved_chief',
  approved_ceo: 'approved_ceo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Tsalin_reportScalarFieldEnum = {
  id: 'id',
  main_report_id: 'main_report_id',
  start_date: 'start_date',
  end_date: 'end_date',
  employee_id: 'employee_id',
  employee_name: 'employee_name',
  register_number: 'register_number',
  phone: 'phone',
  department_id: 'department_id',
  department_name: 'department_name',
  heltes_id: 'heltes_id',
  heltes_name: 'heltes_name',
  organization_id: 'organization_id',
  organization_name: 'organization_name',
  udur_tsag_ajil: 'udur_tsag_ajil',
  iluu_tsag: 'iluu_tsag',
  udur_tsag_amralt: 'udur_tsag_amralt',
  shunu_tsag_ajil: 'shunu_tsag_ajil',
  shunu_tsag_amralt: 'shunu_tsag_amralt',
  udur_tsag_bayar: 'udur_tsag_bayar',
  shunu_tsag_bayar: 'shunu_tsag_bayar',
  sul_zogsolt: 'sul_zogsolt',
  day_zam_tsag: 'day_zam_tsag',
  travel_zam_tsag: 'travel_zam_tsag',
  work_duration: 'work_duration',
  iluu_tsag_night: 'iluu_tsag_night',
  iluu_tsag_day: 'iluu_tsag_day',
  worked_day_count: 'worked_day_count',
  must_work_day_count: 'must_work_day_count',
  sum: 'sum',
  created_hr: 'created_hr',
  approved_chief: 'approved_chief',
  approved_ceo: 'approved_ceo',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at',
  branch_id: 'branch_id'
};

exports.Prisma.Tsalin_report_daily_reportScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  employee_name: 'employee_name',
  register_number: 'register_number',
  phone: 'phone',
  department_id: 'department_id',
  department_name: 'department_name',
  heltes_id: 'heltes_id',
  heltes_name: 'heltes_name',
  organization_id: 'organization_id',
  organization_name: 'organization_name',
  day_date: 'day_date',
  udur_tsag_ajil: 'udur_tsag_ajil',
  iluu_tsag: 'iluu_tsag',
  udur_tsag_amralt: 'udur_tsag_amralt',
  shunu_tsag_ajil: 'shunu_tsag_ajil',
  shunu_tsag_amralt: 'shunu_tsag_amralt',
  udur_tsag_bayar: 'udur_tsag_bayar',
  shunu_tsag_bayar: 'shunu_tsag_bayar',
  sul_zogsolt: 'sul_zogsolt',
  day_zam_tsag: 'day_zam_tsag',
  travel_zam_tsag: 'travel_zam_tsag',
  shift: 'shift',
  work_duration: 'work_duration',
  iluu_tsag_night: 'iluu_tsag_night',
  iluu_tsag_day: 'iluu_tsag_day',
  start_at: 'start_at',
  end_at: 'end_at',
  work_start_at: 'work_start_at',
  work_end_at: 'work_end_at',
  created_hr: 'created_hr',
  approved_chief: 'approved_chief',
  approved_ceo: 'approved_ceo',
  description: 'description',
  punch_logs: 'punch_logs',
  main_report_id: 'main_report_id',
  sum: 'sum',
  created_at: 'created_at',
  updated_at: 'updated_at',
  branch_id: 'branch_id'
};

exports.Prisma.Tsalin_report_daily_report_logsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  branch_id: 'branch_id',
  device_id: 'device_id',
  lat: 'lat',
  lng: 'lng',
  lat_end: 'lat_end',
  lng_end: 'lng_end',
  distance: 'distance',
  day_date: 'day_date',
  time: 'time',
  end_time: 'end_time',
  work_duration: 'work_duration',
  created_at: 'created_at',
  updated_at: 'updated_at',
  punch_type: 'punch_type'
};

exports.Prisma.Tsalin_report_detail_logsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  branch_id: 'branch_id',
  device_id: 'device_id',
  lat: 'lat',
  lng: 'lng',
  lat_end: 'lat_end',
  lng_end: 'lng_end',
  distance: 'distance',
  day_date: 'day_date',
  time: 'time',
  end_time: 'end_time',
  work_duration: 'work_duration',
  created_at: 'created_at',
  updated_at: 'updated_at',
  punch_type: 'punch_type'
};

exports.Prisma.Tsalin_report_detailsScalarFieldEnum = {
  id: 'id',
  tsalin_report_id: 'tsalin_report_id',
  employee_id: 'employee_id',
  employee_name: 'employee_name',
  register_number: 'register_number',
  phone: 'phone',
  department_id: 'department_id',
  department_name: 'department_name',
  heltes_id: 'heltes_id',
  heltes_name: 'heltes_name',
  organization_id: 'organization_id',
  organization_name: 'organization_name',
  day_date: 'day_date',
  udur_tsag_ajil: 'udur_tsag_ajil',
  iluu_tsag: 'iluu_tsag',
  udur_tsag_amralt: 'udur_tsag_amralt',
  shunu_tsag_ajil: 'shunu_tsag_ajil',
  shunu_tsag_amralt: 'shunu_tsag_amralt',
  udur_tsag_bayar: 'udur_tsag_bayar',
  shunu_tsag_bayar: 'shunu_tsag_bayar',
  sul_zogsolt: 'sul_zogsolt',
  day_zam_tsag: 'day_zam_tsag',
  travel_zam_tsag: 'travel_zam_tsag',
  shift: 'shift',
  work_duration: 'work_duration',
  iluu_tsag_night: 'iluu_tsag_night',
  iluu_tsag_day: 'iluu_tsag_day',
  start_at: 'start_at',
  end_at: 'end_at',
  work_start_at: 'work_start_at',
  work_end_at: 'work_end_at',
  created_hr: 'created_hr',
  approved_chief: 'approved_chief',
  approved_ceo: 'approved_ceo',
  description: 'description',
  punch_logs: 'punch_logs',
  main_report_id: 'main_report_id',
  sum: 'sum',
  created_at: 'created_at',
  updated_at: 'updated_at',
  branch_id: 'branch_id'
};

exports.Prisma.User_courseScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  user_id: 'user_id',
  paid_amount: 'paid_amount',
  invoice_id: 'invoice_id',
  is_end: 'is_end',
  doctor_point: 'doctor_point',
  certificate: 'certificate',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_model_settingsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  data_type_id: 'data_type_id',
  details: 'details',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_rolesScalarFieldEnum = {
  user_id: 'user_id',
  role_id: 'role_id'
};

exports.Prisma.User_walletScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  total_amount: 'total_amount',
  total_web_point: 'total_web_point',
  total_doctor_point: 'total_doctor_point',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_wallet_transactionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  credit_doctor_point: 'credit_doctor_point',
  debit_doctor_point: 'debit_doctor_point',
  credit_web_point: 'credit_web_point',
  debit_web_point: 'debit_web_point',
  credit_amount: 'credit_amount',
  debit_amount: 'debit_amount',
  type: 'type',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  role_id: 'role_id',
  name: 'name',
  email: 'email',
  avatar: 'avatar',
  email_verified_at: 'email_verified_at',
  password: 'password',
  remember_token: 'remember_token',
  settings: 'settings',
  created_at: 'created_at',
  updated_at: 'updated_at',
  organization_id: 'organization_id',
  branch_id: 'branch_id',
  last_name: 'last_name',
  phone: 'phone',
  employee_code: 'employee_code',
  degree_name: 'degree_name',
  position_name: 'position_name',
  major_name: 'major_name',
  atk: 'atk',
  yamat: 'yamat',
  in_date: 'in_date',
  contract_number: 'contract_number',
  address: 'address',
  work_year_bonus: 'work_year_bonus',
  food_bonus: 'food_bonus',
  road_bonus: 'road_bonus',
  distance_work: 'distance_work',
  out_date: 'out_date'
};

exports.Prisma.Work_at_rocScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  email: 'email',
  major: 'major',
  position_id: 'position_id',
  status_id: 'status_id',
  degree_name: 'degree_name',
  birth_day: 'birth_day',
  additional_information: 'additional_information',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Work_at_roc_statusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Work_day_planScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  branch_id: 'branch_id',
  work_time_id: 'work_time_id',
  day_date: 'day_date',
  created_by: 'created_by',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Work_positionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Work_statusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_working: 'is_working',
  must_punch: 'must_punch',
  work_time_multi: 'work_time_multi',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.coffee_bean_logs_type = exports.$Enums.coffee_bean_logs_type = {
  ROAST: 'ROAST',
  SALE: 'SALE',
  OTHER: 'OTHER'
};

exports.pages_status = exports.$Enums.pages_status = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE'
};

exports.posts_status = exports.$Enums.posts_status = {
  PUBLISHED: 'PUBLISHED',
  DRAFT: 'DRAFT',
  PENDING: 'PENDING'
};

exports.user_wallet_transaction_type = exports.$Enums.user_wallet_transaction_type = {
  doctor_point: 'doctor_point',
  web_point: 'web_point',
  amount: 'amount'
};

exports.user_wallet_transaction_status = exports.$Enums.user_wallet_transaction_status = {
  Pending: 'Pending',
  Wait: 'Wait',
  Active: 'Active'
};

exports.Prisma.ModelName = {
  b_file_anywhere: 'b_file_anywhere',
  b_user_model_action_logs: 'b_user_model_action_logs',
  barimt: 'barimt',
  basket_items: 'basket_items',
  baskets: 'baskets',
  beans: 'beans',
  branch_has_real_good: 'branch_has_real_good',
  branches: 'branches',
  calendars: 'calendars',
  categories: 'categories',
  coffee_bean_logs: 'coffee_bean_logs',
  coffee_grinders: 'coffee_grinders',
  coffee_imports: 'coffee_imports',
  coffee_packages: 'coffee_packages',
  coffee_roasts: 'coffee_roasts',
  coffee_status_histories: 'coffee_status_histories',
  coffee_statuses: 'coffee_statuses',
  coffee_units: 'coffee_units',
  coffees: 'coffees',
  course: 'course',
  data_rows: 'data_rows',
  data_types: 'data_types',
  discount: 'discount',
  document: 'document',
  document_category: 'document_category',
  document_status: 'document_status',
  document_status_history: 'document_status_history',
  document_template: 'document_template',
  document_type: 'document_type',
  employee_request: 'employee_request',
  employee_request_category: 'employee_request_category',
  employee_request_status: 'employee_request_status',
  exam: 'exam',
  faqs: 'faqs',
  g_address_city: 'g_address_city',
  g_address_district: 'g_address_district',
  g_anket: 'g_anket',
  g_anket_decision: 'g_anket_decision',
  g_anket_has_award: 'g_anket_has_award',
  g_anket_has_direction_contact: 'g_anket_has_direction_contact',
  g_anket_has_education: 'g_anket_has_education',
  g_anket_has_family: 'g_anket_has_family',
  g_anket_has_file: 'g_anket_has_file',
  g_anket_has_language: 'g_anket_has_language',
  g_anket_has_related_person: 'g_anket_has_related_person',
  g_anket_has_skill: 'g_anket_has_skill',
  g_anket_has_software: 'g_anket_has_software',
  g_anket_has_sport: 'g_anket_has_sport',
  g_anket_has_training: 'g_anket_has_training',
  g_anket_has_work: 'g_anket_has_work',
  g_anket_interested_position: 'g_anket_interested_position',
  g_anket_related_person: 'g_anket_related_person',
  g_command: 'g_command',
  g_command_attribute_value: 'g_command_attribute_value',
  g_command_file: 'g_command_file',
  g_contract: 'g_contract',
  g_contract_attribute_value: 'g_contract_attribute_value',
  g_contract_file: 'g_contract_file',
  g_contract_property_detail: 'g_contract_property_detail',
  g_contract_type: 'g_contract_type',
  g_document_status: 'g_document_status',
  g_template: 'g_template',
  g_template_attribute: 'g_template_attribute',
  g_user_address: 'g_user_address',
  g_user_award: 'g_user_award',
  g_user_direction_contact: 'g_user_direction_contact',
  g_user_education: 'g_user_education',
  g_user_family: 'g_user_family',
  g_user_file: 'g_user_file',
  g_user_gazar: 'g_user_gazar',
  g_user_group_history: 'g_user_group_history',
  g_user_has_job: 'g_user_has_job',
  g_user_language: 'g_user_language',
  g_user_organization: 'g_user_organization',
  g_user_out_category: 'g_user_out_category',
  g_user_out_category_type: 'g_user_out_category_type',
  g_user_personal: 'g_user_personal',
  g_user_related_person: 'g_user_related_person',
  g_user_skill: 'g_user_skill',
  g_user_software: 'g_user_software',
  g_user_sport: 'g_user_sport',
  g_user_stats: 'g_user_stats',
  g_user_training: 'g_user_training',
  g_user_work: 'g_user_work',
  g_user_work_time: 'g_user_work_time',
  g_user_work_type: 'g_user_work_type',
  good_parent_attributes: 'good_parent_attributes',
  good_parents: 'good_parents',
  good_sizes: 'good_sizes',
  good_types: 'good_types',
  goods: 'goods',
  invoice: 'invoice',
  invoice_items: 'invoice_items',
  invoices: 'invoices',
  job_position: 'job_position',
  lesson: 'lesson',
  menu_items: 'menu_items',
  menus: 'menus',
  messages: 'messages',
  migrations: 'migrations',
  order_items: 'order_items',
  order_status: 'order_status',
  order_status_history: 'order_status_history',
  orders: 'orders',
  organizations: 'organizations',
  our_teams: 'our_teams',
  page_card: 'page_card',
  page_section: 'page_section',
  pages: 'pages',
  payments: 'payments',
  permission_role: 'permission_role',
  permissions: 'permissions',
  personal_access_tokens: 'personal_access_tokens',
  posts: 'posts',
  punch_log: 'punch_log',
  real_good: 'real_good',
  real_good_transaction: 'real_good_transaction',
  roles: 'roles',
  service: 'service',
  service_category: 'service_category',
  settings: 'settings',
  sf_guard_group: 'sf_guard_group',
  sf_guard_user: 'sf_guard_user',
  sf_guard_user_additional_time: 'sf_guard_user_additional_time',
  sf_guard_user_branch: 'sf_guard_user_branch',
  sf_guard_user_device_on_branch: 'sf_guard_user_device_on_branch',
  sf_guard_user_group: 'sf_guard_user_group',
  sf_guard_user_work_day_log: 'sf_guard_user_work_day_log',
  sms_log: 'sms_log',
  stock_balances: 'stock_balances',
  stock_goods: 'stock_goods',
  tags: 'tags',
  teacher: 'teacher',
  topic: 'topic',
  transaction_items: 'transaction_items',
  transaction_types: 'transaction_types',
  transactions: 'transactions',
  translations: 'translations',
  tsalin_main_report: 'tsalin_main_report',
  tsalin_report: 'tsalin_report',
  tsalin_report_daily_report: 'tsalin_report_daily_report',
  tsalin_report_daily_report_logs: 'tsalin_report_daily_report_logs',
  tsalin_report_detail_logs: 'tsalin_report_detail_logs',
  tsalin_report_details: 'tsalin_report_details',
  user_course: 'user_course',
  user_model_settings: 'user_model_settings',
  user_roles: 'user_roles',
  user_wallet: 'user_wallet',
  user_wallet_transaction: 'user_wallet_transaction',
  users: 'users',
  work_at_roc: 'work_at_roc',
  work_at_roc_status: 'work_at_roc_status',
  work_day_plan: 'work_day_plan',
  work_position: 'work_position',
  work_status: 'work_status'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
