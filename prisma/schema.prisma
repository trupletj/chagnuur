generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model b_file_anywhere {
  id              Int      @id @default(autoincrement())
  file_table_id   Int?
  file_table_name String?  @db.VarChar(255)
  image_path      String?  @db.VarChar(255)
  created_by      Int?
  created_at      DateTime @db.DateTime(0)
  updated_at      DateTime @db.DateTime(0)
  name            String?

  @@index([created_by], map: "created_by_idx")
}

model b_user_model_action_logs {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     Int?
  model_id    Int?
  model_name  String?
  action      String?
  description String?   @db.LongText
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model barimt {
  id                       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  barimt_number            String
  padan_number             Int
  branch_id                Int
  to_branch_id             Int?
  related_barimt_id        Int?
  related_barimt_number    String?
  related_padan_number     String?
  is_credit                Boolean?  @default(false)
  total_amount             Decimal?  @default(0.00) @db.Decimal(16, 2)
  confirmed_total_amount   Decimal?  @default(0.00) @db.Decimal(16, 2)
  total_quantity           Float?    @default(0)
  confirmed_total_quantity Float?    @default(0)
  is_confirm               Boolean   @default(false)
  created_at               DateTime? @default(now()) @db.DateTime(0)
  updated_at               DateTime? @default(now()) @db.DateTime(0)
  created_user_id          Int?
  updated_user_id          Int?

  @@index([created_user_id], map: "barimt_created_user_id_index")
  @@index([updated_user_id], map: "barimt_updated_user_id_index")
}

model basket_items {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  good_id         Int?
  basket_id       Int?
  user_id         Int?
  good_unit_price Float?    @db.Float
  quantity        Int?
  deleted_at      DateTime? @db.Timestamp(0)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
}

model baskets {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id    Int?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  is_active  Int?      @default(1) @db.TinyInt
}

model beans {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  name           String?   @db.VarChar(50)
  body_text      String?   @db.Text
  intro_text     String?   @db.VarChar(255)
  origin         String?   @db.VarChar(50)
  region         String?   @db.VarChar(50)
  processing     String?   @db.VarChar(50)
  altitude       String?   @db.VarChar(50)
  harvest_period String?   @db.VarChar(50)
  variety        String?   @db.VarChar(255)
  tasting_note   String?   @db.VarChar(255)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  deleted_at     DateTime? @db.Timestamp(0)
  home_image     String?   @db.VarChar(255)
  profile_image  String?   @db.VarChar(255)
}

model branch_has_real_good {
  id                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  branch_id                 Int
  real_good_id              Int
  price_avg                 Decimal?  @db.Decimal(8, 2)
  available_count           Float?
  hold_count                Float?
  confirmed_price_avg       Decimal?  @db.Decimal(8, 2)
  confirmed_available_count Float?
  confirmed_hold_count      Float?
  created_at                DateTime? @default(now()) @db.DateTime(0)
  updated_at                DateTime? @default(now()) @db.DateTime(0)
  created_user_id           Int?
  updated_user_id           Int?

  @@index([created_user_id], map: "branch_has_real_good_created_user_id_index")
  @@index([updated_user_id], map: "branch_has_real_good_updated_user_id_index")
}

model branches {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  name       String?   @db.VarChar(255)
  is_stock   Int?      @db.TinyInt
  address    String?   @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  image_path String?   @db.VarChar(255)
  sort_order Int?
  prefix     String    @db.VarChar(45)
  body_text  String?   @db.VarChar(800)
  lat        String?   @db.VarChar(40)
  lng        String?   @db.VarChar(40)
}

model calendars {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String    @db.VarChar(255)
  category_id Int
  start       DateTime  @default(now()) @db.Timestamp(0)
  end         DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  description String
  allDay      Boolean   @default(false)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model categories {
  id               Int          @id @default(autoincrement()) @db.UnsignedInt
  parent_id        Int?         @db.UnsignedInt
  order            Int          @default(1)
  name             String
  slug             String       @unique(map: "categories_slug_unique")
  created_at       DateTime?    @db.Timestamp(0)
  updated_at       DateTime?    @db.Timestamp(0)
  categories       categories?  @relation("categoriesTocategories", fields: [parent_id], references: [id], map: "categories_parent_id_foreign")
  other_categories categories[] @relation("categoriesTocategories")

  @@index([parent_id], map: "categories_parent_id_foreign")
}

model coffee_bean_logs {
  id          BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  name        String
  import_id   Int
  day_date    DateTime              @db.Date
  weight      Decimal               @db.Decimal(8, 2)
  type        coffee_bean_logs_type
  description String?               @db.Text
  created_at  DateTime?             @db.Timestamp(0)
  updated_at  DateTime?             @db.Timestamp(0)
}

model coffee_grinders {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String
  body       String?   @db.Text
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model coffee_imports {
  id               BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  bean_id          Int
  bean_name        String?
  import_date      DateTime  @db.Date
  total_weight     Decimal   @db.Decimal(8, 2)
  roasted_weight   Decimal   @default(0.00) @db.Decimal(8, 2)
  saled_weight     Decimal   @default(0.00) @db.Decimal(8, 2)
  other_weight     Decimal   @default(0.00) @db.Decimal(8, 2)
  available_weight Decimal   @default(0.00) @db.Decimal(8, 2)
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
  name             String?   @db.VarChar(255)
}

model coffee_packages {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String
  weight     Decimal   @db.Decimal(5, 2)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model coffee_roasts {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String
  body       String?   @db.Text
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model coffee_status_histories {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  coffee_unit_id Int
  status_id      Int
  status_name    String
  created_by     Int
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
}

model coffee_statuses {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model coffee_units {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  bean_id        Int
  bean_name      String
  package_id     Int
  package_name   String
  roast_id       Int
  roast_name     String
  grinder_id     Int
  grinder_name   String
  last_branch_id Int?
  branch_name    String?
  status_id      Int?
  status_name    String?
  unit_price     Decimal?  @db.Decimal(8, 2)
  weight         Decimal   @db.Decimal(8, 2)
  roast_date     DateTime  @db.Date
  package_date   DateTime  @db.Date
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  import_name    String?   @db.VarChar(255)
  import_id      Int?
  generate_count Int?
  is_print       Boolean   @default(false)
}

model coffees {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  title       String?   @db.VarChar(45)
  image_path  String?   @db.VarChar(255)
  category_id Int?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  body_text   String?   @db.Text
  intro_text  String?   @db.VarChar(400)
  price       Float?    @db.Float
}

model course {
  id                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                 String    @db.VarChar(255)
  image                String?   @db.VarChar(255)
  description          String?   @db.VarChar(1800)
  information          String?   @db.VarChar(1800)
  tags                 String?   @db.VarChar(1800)
  certificate_template String?   @db.Text
  has_certificate      Boolean   @default(false)
  exam_id              Int?
  doctor_point         Float     @default(0.00)
  web_point            Float     @default(0.00)
  main_price           Int       @default(0)
  created_at           DateTime? @db.Timestamp(0)
  updated_at           DateTime? @db.Timestamp(0)
  created_user_id      Int?
  updated_user_id      Int?

  @@index([created_user_id], map: "course_created_user_id_index")
  @@index([updated_user_id], map: "course_updated_user_id_index")
}

model data_rows {
  id           Int        @id @default(autoincrement()) @db.UnsignedInt
  data_type_id Int        @db.UnsignedInt
  field        String
  type         String
  display_name String
  required     Boolean    @default(false)
  browse       Boolean    @default(true)
  read         Boolean    @default(true)
  edit         Boolean    @default(true)
  add          Boolean    @default(true)
  delete       Boolean    @default(true)
  details      String?    @db.Text
  order        Int        @default(1)
  data_types   data_types @relation(fields: [data_type_id], references: [id], onDelete: Cascade, map: "data_rows_data_type_id_foreign")

  @@index([data_type_id], map: "data_rows_data_type_id_foreign")
}

model data_types {
  id                    Int         @id @default(autoincrement()) @db.UnsignedInt
  name                  String      @unique(map: "data_types_name_unique")
  slug                  String      @unique(map: "data_types_slug_unique")
  display_name_singular String
  display_name_plural   String
  icon                  String?
  model_name            String?
  policy_name           String?
  controller            String?
  description           String?
  generate_permissions  Boolean     @default(false)
  server_side           Int         @default(0) @db.TinyInt
  details               String?     @db.Text
  created_at            DateTime?   @db.Timestamp(0)
  updated_at            DateTime?   @db.Timestamp(0)
  data_rows             data_rows[]
}

model discount {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  course_id       Int?
  name            String?
  course_percent  Int       @default(0)
  course_amount   Int       @default(1)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  created_user_id Int?

  @@index([created_user_id], map: "discount_created_user_id_index")
}

model document {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title             String?
  number            String?
  intro             String?
  attachment        String?
  company_id        Int?
  company_name      String?
  company_register  String?
  status_id         Int?
  document_name     String?
  document_date     String?
  document_end_date String?
  category_id       Int?
  category_name     String?
  type_id           Int?
  type_name         String?
  encrypt           String?
  blank_number      String?
  user_id           Int?
  template_id       Int?
  created_by        Int
  description       String?
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model document_category {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name              String
  description       String?
  type_id           Int
  type_name         String
  document_template String
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model document_status {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name        String
  description String?
  is_last     Boolean   @default(false)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model document_status_history {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  status_id     Int?
  status_name   String
  document_id   Int?
  document_name String?
  description   String?
  created_by    Int?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
}

model document_template {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  template_text String    @db.LongText
  template_name String?
  created_by    Int?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
}

model document_type {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name        String
  description String?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model employee_request {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     Int?
  status_id   Int?
  start_date  DateTime? @db.Date
  end_date    DateTime? @db.Date
  title       String?
  body        String?   @db.Text
  image_path  String?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  category_id Int?
}

model employee_request_category {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String?
  body       String?   @db.Text
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model employee_request_status {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model exam {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  course_id   Int?
  topic_id    Int?
  lesson_id   Int?
  name        String
  description String?   @db.VarChar(1800)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model faqs {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  question   String?   @db.VarChar(255)
  answer     String?   @db.Text
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model g_address_city {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(255)
  description String?  @db.Text
  is_active   Boolean?
  sort_order  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)
}

model g_address_district {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(255)
  description String?  @db.Text
  city_id     Int?
  is_active   Boolean?
  sort_order  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)
  bus_price   Float?   @db.Float

  @@index([city_id], map: "city_id_idx")
}

model g_anket {
  id                 BigInt    @id @default(autoincrement())
  user_id            BigInt?
  id_card_address_id Int?
  ads_id             Int?
  current_address_id Int?
  organization_id    Int?
  personal_id        Int?
  order_id           Int?
  available_date     DateTime? @db.Date
  min_salary         Float?    @db.Float
  max_salary         Float?    @db.Float
  work_on_country    Boolean?
  how_to_known       String?   @db.Text
  mobile_number      String?   @db.VarChar(45)
  work_number        String?   @db.VarChar(45)
  home_number        String?   @db.VarChar(45)
  health_info        String?   @db.Text
  is_sent            Boolean?
  created_by         BigInt?
  updated_by         BigInt?
  is_active          Boolean?
  sort_order         BigInt?
  is_confirm         Boolean?
  confirmed_at       DateTime? @db.DateTime(0)
  confirm_user_id    BigInt?
  is_interview       Boolean?
  is_job_exam        Boolean?
  is_skill_exam      Boolean?
  is_job             Boolean?
  retired_at         DateTime? @db.DateTime(0)
  sent_at            DateTime? @db.DateTime(0)
  pdf_created        Boolean?
  created_at         DateTime  @db.DateTime(0)
  updated_at         DateTime  @db.DateTime(0)
  is_english         Boolean?
  is_easy            Boolean?

  @@index([ads_id], map: "ads_id_idx")
  @@index([confirm_user_id], map: "confirm_user_id_idx")
  @@index([current_address_id], map: "current_address_id_idx")
  @@index([id_card_address_id], map: "id_card_address_id_idx")
  @@index([order_id], map: "order_id_idx")
  @@index([organization_id], map: "organization_id_idx")
  @@index([personal_id], map: "personal_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_anket_decision {
  id               Int      @id @default(autoincrement())
  anket_id         BigInt?
  user_id          BigInt?
  decision_user_id BigInt?
  type             BigInt?
  position_id      Int?
  created_at       DateTime @db.DateTime(0)
  updated_at       DateTime @db.DateTime(0)

  @@index([anket_id], map: "anket_id_idx")
  @@index([decision_user_id], map: "decision_user_id_idx")
  @@index([position_id], map: "position_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_anket_has_award {
  anket_id   BigInt
  award_id   Int
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@id([anket_id, award_id])
  @@index([award_id], map: "g_anket_has_award_award_id_g_user_award_id")
}

model g_anket_has_direction_contact {
  anket_id             BigInt
  direction_contact_id Int
  created_at           DateTime @db.DateTime(0)
  updated_at           DateTime @db.DateTime(0)

  @@id([anket_id, direction_contact_id])
  @@index([direction_contact_id], map: "gdgi")
}

model g_anket_has_education {
  anket_id     BigInt
  education_id Int
  created_at   DateTime @db.DateTime(0)
  updated_at   DateTime @db.DateTime(0)

  @@id([anket_id, education_id])
  @@index([education_id], map: "g_anket_has_education_education_id_g_user_education_id")
}

model g_anket_has_family {
  anket_id   BigInt
  family_id  Int
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@id([anket_id, family_id])
  @@index([family_id], map: "g_anket_has_family_family_id_g_user_family_id")
}

model g_anket_has_file {
  anket_id   BigInt
  file_id    Int
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@id([anket_id, file_id])
  @@index([file_id], map: "g_anket_has_file_file_id_g_user_file_id")
}

model g_anket_has_language {
  anket_id    BigInt
  language_id Int
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@id([anket_id, language_id])
  @@index([language_id], map: "g_anket_has_language_language_id_g_user_language_id")
}

model g_anket_has_related_person {
  anket_id          Int
  related_person_id Int
  created_at        DateTime @db.DateTime(0)
  updated_at        DateTime @db.DateTime(0)

  @@id([anket_id, related_person_id])
}

model g_anket_has_skill {
  anket_id   BigInt
  skill_id   Int
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@id([anket_id, skill_id])
  @@index([skill_id], map: "g_anket_has_skill_skill_id_g_user_skill_id")
}

model g_anket_has_software {
  anket_id    BigInt
  software_id Int
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@id([anket_id, software_id])
  @@index([software_id], map: "g_anket_has_software_software_id_g_user_software_id")
}

model g_anket_has_sport {
  anket_id   BigInt
  sport_id   Int
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@id([anket_id, sport_id])
  @@index([sport_id], map: "g_anket_has_sport_sport_id_g_user_sport_id")
}

model g_anket_has_training {
  anket_id    BigInt
  training_id Int
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@id([anket_id, training_id])
  @@index([training_id], map: "g_anket_has_training_training_id_g_user_training_id")
}

model g_anket_has_work {
  anket_id   BigInt
  work_id    Int
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@id([anket_id, work_id])
  @@index([work_id], map: "g_anket_has_work_work_id_g_user_work_id")
}

model g_anket_interested_position {
  id            Int      @id @default(autoincrement())
  user_id       BigInt?
  anket_id      BigInt?
  position_id   Int?
  department_id Int?
  created_by    BigInt?
  updated_by    BigInt?
  is_active     Boolean?
  sort_order    BigInt?
  created_at    DateTime @db.DateTime(0)
  updated_at    DateTime @db.DateTime(0)

  @@index([anket_id], map: "anket_id_idx")
  @@index([department_id], map: "department_id_idx")
  @@index([position_id], map: "position_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_anket_related_person {
  id          Int      @id @default(autoincrement())
  user_id     BigInt?
  anket_id    BigInt?
  who_is_your String?  @db.VarChar(45)
  name        String?  @db.VarChar(45)
  position    String?  @db.VarChar(255)
  phone       String?  @db.VarChar(45)
  created_by  BigInt?
  updated_by  BigInt?
  is_active   Boolean?
  sort_order  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@index([anket_id], map: "anket_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_command {
  id                   Int       @id @default(autoincrement())
  template_id          Int?
  command_number       String?   @db.VarChar(45)
  command_index        String?   @db.VarChar(45)
  user_id              BigInt?
  anket_id             BigInt?
  organization_id      Int?
  type                 Int?
  created_by           Int?
  user_lastname        String?   @db.VarChar(255)
  user_firstname       String?   @db.VarChar(255)
  user_register_number String?   @db.VarChar(20)
  body                 Bytes?
  created_at           DateTime  @db.DateTime(0)
  updated_at           DateTime  @db.DateTime(0)
  havstralt_file       String?   @db.VarChar(255)
  page_size            String?   @db.VarChar(10)
  is_trash             Boolean?
  is_active            Boolean?
  is_draft             Boolean?
  start_at             DateTime? @db.DateTime(0)
  start_date           DateTime? @db.DateTime(0)
  end_date             DateTime? @db.DateTime(0)
  gazar_id             Int?
  document_date        DateTime? @db.Date
  document_status_id   Int?
  updated_user_id      Int?
  created_user_id      Int?

  @@index([anket_id], map: "anket_id_idx")
  @@index([created_by], map: "created_by_idx")
  @@index([created_user_id], map: "g_command_created_user_id_index")
  @@index([updated_user_id], map: "g_command_updated_user_id_index")
  @@index([organization_id], map: "organization_id_idx")
  @@index([template_id], map: "template_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_command_attribute_value {
  id           Int      @id @default(autoincrement())
  command_id   Int?
  attribute_id Int?
  name         String?  @db.Text
  type         String?  @db.VarChar(255)
  slug         String?  @db.Text
  created_at   DateTime @db.DateTime(0)
  updated_at   DateTime @db.DateTime(0)

  @@index([attribute_id], map: "attribute_id_idx")
  @@index([command_id], map: "command_id_idx")
}

model g_command_file {
  id         Int      @id @default(autoincrement())
  command_id BigInt?
  name       String?  @db.VarChar(255)
  file_path  String?  @db.VarChar(255)
  is_trash   Boolean?
  created_by BigInt?
  updated_by BigInt?
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@index([command_id], map: "command_id_idx")
}

model g_contract {
  id                   Int       @id @default(autoincrement())
  contract_number      String?   @db.VarChar(45)
  contract_index       String?   @db.VarChar(45)
  user_id              Int?
  organization_id      Int?
  template_id          Int?
  anket_id             Int?
  is_active            Boolean?
  is_draft             Boolean?
  is_trash             Boolean?
  start_at             DateTime? @db.DateTime(0)
  expired_type         BigInt?
  expired_detail       String?   @db.Text
  expired_at           DateTime? @db.DateTime(0)
  user_address         String?   @db.Text
  user_familyname      String?   @db.VarChar(255)
  user_lastname        String?   @db.VarChar(255)
  user_firstname       String?   @db.VarChar(255)
  user_register_number String?   @db.VarChar(20)
  created_by           Int?
  body                 Bytes?
  created_at           DateTime  @db.DateTime(0)
  updated_at           DateTime  @db.DateTime(0)
  havstralt_file       String?   @db.VarChar(255)
  page_size            String?   @db.VarChar(10)
  tushaal_dugaar       String?   @db.VarChar(50)
  gazar_id             Int?
  document_date        DateTime? @db.Date
  document_status_id   Int?
  end_at               DateTime? @db.Date

  @@index([anket_id], map: "anket_id_idx")
  @@index([created_by], map: "created_by_idx")
  @@index([organization_id], map: "organization_id_idx")
  @@index([template_id], map: "template_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_contract_attribute_value {
  id           Int      @id @default(autoincrement())
  contract_id  Int?
  attribute_id Int?
  name         String?  @db.Text
  type         String?  @db.VarChar(255)
  slug         String?  @db.Text
  created_at   DateTime @db.DateTime(0)
  updated_at   DateTime @db.DateTime(0)

  @@index([attribute_id], map: "attribute_id_idx")
  @@index([contract_id], map: "contract_id_idx")
}

model g_contract_file {
  id          Int      @id @default(autoincrement())
  contract_id BigInt?
  name        String?  @db.VarChar(255)
  file_path   String?  @db.VarChar(255)
  is_trash    Boolean?
  created_by  BigInt?
  updated_by  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@index([contract_id], map: "contract_id_idx")
}

model g_contract_property_detail {
  id              Int      @id @default(autoincrement())
  contract_id     BigInt?
  user_id         BigInt?
  property_name   String?  @db.VarChar(255)
  property_count  Float?   @db.Float
  property_unit   String?  @db.VarChar(10)
  property_rating String?  @db.Text
  property_date   String?  @db.Text
  is_active       Boolean?
  is_trash        Boolean?
  created_at      DateTime @db.DateTime(0)
  updated_at      DateTime @db.DateTime(0)

  @@index([contract_id], map: "contract_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_contract_type {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(255)
  description String?  @db.Text
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)
}

model g_document_status {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  type       Int
  name       String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model g_template {
  id              Int      @id @default(autoincrement())
  name            String?  @db.VarChar(255)
  description     String?  @db.Text
  body            Bytes?
  is_active       Boolean?
  is_endable      Boolean? @default(false)
  created_by      Int?
  organization_id Int?
  type            String?  @db.VarChar(10)
  created_at      DateTime @db.DateTime(0)
  updated_at      DateTime @db.DateTime(0)
  page_size       String?  @db.VarChar(10)
  gazar_id        Int?

  @@index([created_by], map: "created_by_idx")
  @@index([organization_id], map: "organization_id_idx")
}

model g_template_attribute {
  id          Int      @id @default(autoincrement())
  template_id Int?
  name        String?  @db.VarChar(255)
  type        String?  @db.VarChar(255)
  slug        String?  @db.Text
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@index([template_id], map: "template_id_idx")
}

model g_user_address {
  id          Int      @id @default(autoincrement())
  user_id     BigInt?
  city_id     Int?
  district_id Int?
  street      String?  @db.VarChar(255)
  address     String?  @db.Text
  type        BigInt?
  is_map      Boolean?
  longitude   String?  @db.VarChar(45)
  latitude    String?  @db.VarChar(45)
  is_trash    Boolean?
  created_by  BigInt?
  updated_by  BigInt?
  is_active   Boolean?
  sort_order  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@index([city_id], map: "city_id_idx")
  @@index([district_id], map: "district_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_user_award {
  id                 Int      @id @default(autoincrement())
  user_id            BigInt?
  name               String?  @db.VarChar(255)
  given_organization String?  @db.VarChar(255)
  taken_year         String?  @db.VarChar(10)
  is_trash           Boolean?
  created_by         BigInt?
  updated_by         BigInt?
  is_active          Boolean?
  sort_order         BigInt?
  created_at         DateTime @db.DateTime(0)
  updated_at         DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_direction_contact {
  id          Int      @id @default(autoincrement())
  user_id     BigInt?
  name        String?  @db.VarChar(255)
  who_is_your String?  @db.VarChar(45)
  phone       String?  @db.VarChar(45)
  is_trash    Boolean?
  created_by  BigInt?
  updated_by  BigInt?
  is_active   Boolean?
  sort_order  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)
  work        String?  @db.VarChar(255)

  @@index([user_id], map: "user_id_idx")
}

model g_user_education {
  id          Int      @id @default(autoincrement())
  user_id     BigInt?
  name        String?  @db.VarChar(255)
  location    String?  @db.VarChar(255)
  school_name String?  @db.VarChar(255)
  start_year  String?  @db.VarChar(10)
  end_year    String?  @db.VarChar(10)
  major       String?  @db.VarChar(255)
  degree      String?  @db.VarChar(255)
  avarage     Float?   @db.Float
  is_trash    Boolean?
  created_by  BigInt?
  updated_by  BigInt?
  is_active   Boolean?
  sort_order  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_family {
  id                Int       @id @default(autoincrement())
  user_id           BigInt?
  who_is_your       String?   @db.VarChar(255)
  name              String?   @db.VarChar(45)
  birthday          DateTime? @db.Date
  birthplace        String?   @db.VarChar(255)
  major             String?   @db.VarChar(255)
  organization_name String?   @db.VarChar(255)
  job_position      String?   @db.VarChar(255)
  phone             String?   @db.VarChar(45)
  is_trash          Boolean?
  created_by        BigInt?
  updated_by        BigInt?
  is_active         Boolean?
  sort_order        BigInt?
  created_at        DateTime  @db.DateTime(0)
  updated_at        DateTime  @db.DateTime(0)
  register_number   String?   @db.VarChar(45)
  address           String?   @db.VarChar(255)

  @@index([user_id], map: "user_id_idx")
}

model g_user_file {
  id          Int      @id @default(autoincrement())
  user_id     BigInt?
  name        String?  @db.VarChar(255)
  description String?  @db.Text
  file_path   String?  @db.VarChar(255)
  type        BigInt?
  is_trash    Boolean?
  created_by  BigInt?
  updated_by  BigInt?
  is_active   Boolean?
  sort_order  BigInt?
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_gazar {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    Int
  gazar_id   Int
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model g_user_group_history {
  id          Int      @id @default(autoincrement())
  worker_id   Int?
  group_id    Int?
  created_by  Int?
  description String?  @db.VarChar(255)
  created_at  DateTime @db.DateTime(0)
  updated_at  DateTime @db.DateTime(0)

  @@index([created_by], map: "created_by_idx")
  @@index([group_id], map: "group_id_idx")
  @@index([worker_id], map: "worker_id_idx")
}

model g_user_has_job {
  id              Int      @id @default(autoincrement())
  anket_id        BigInt?
  user_id         BigInt?
  organization_id Int?
  is_active       Boolean?
  created_at      DateTime @db.DateTime(0)
  updated_at      DateTime @db.DateTime(0)

  @@index([anket_id], map: "anket_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_user_language {
  id            Int      @id @default(autoincrement())
  user_id       BigInt?
  name          String?  @db.VarChar(255)
  duration      BigInt?
  duration_unit String?  @db.VarChar(45)
  listening     String?  @db.VarChar(45)
  speaking      String?  @db.VarChar(45)
  reading       String?  @db.VarChar(45)
  level         String?  @db.VarChar(45)
  exam          String?  @db.VarChar(255)
  exam_point    Float?   @db.Float
  is_trash      Boolean?
  created_by    BigInt?
  updated_by    BigInt?
  is_active     Boolean?
  sort_order    BigInt?
  created_at    DateTime @db.DateTime(0)
  updated_at    DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_organization {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         Int
  organization_id Int
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)

  @@unique([user_id, organization_id], map: "g_user_organization_user_id_organization_id_unique")
}

model g_user_out_category {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar(255)
  type_id    Int?
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@index([type_id], map: "type_id_idx")
}

model g_user_out_category_type {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar(255)
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)
}

model g_user_personal {
  id                        Int       @id @default(autoincrement())
  user_id                   BigInt?
  familyname                String?   @db.VarChar(255)
  lastname                  String?   @db.VarChar(255)
  firstname                 String?   @db.VarChar(255)
  gender                    String?   @db.VarChar(10)
  birthday                  DateTime? @db.Date
  email                     String?   @db.VarChar(255)
  register_number           String?   @db.VarChar(45)
  driver_license_has        Boolean?
  driver_license_number     String?   @db.VarChar(45)
  driver_license_classes    String?   @db.VarChar(45)
  driver_license_other      String?   @db.VarChar(255)
  driver_license_given_year String?   @db.VarChar(10)
  file_path                 String?   @db.VarChar(255)
  has_own_car               Boolean?
  is_trash                  Boolean?
  created_by                BigInt?
  updated_by                BigInt?
  is_active                 Boolean?
  sort_order                BigInt?
  created_at                DateTime  @db.DateTime(0)
  updated_at                DateTime  @db.DateTime(0)
  is_tsereg                 Boolean?  @default(false)
  birthplace                String?   @db.VarChar(255)
  is_married                Boolean?
  yas_undes                 String?   @db.VarChar(45)
  photo                     String?   @db.VarChar(255)

  @@index([id], map: "id")
  @@index([user_id], map: "user_id_idx")
}

model g_user_related_person {
  id              Int      @id @default(autoincrement())
  user_id         Int?
  related_user_id Int?
  who_is_your     String?  @db.VarChar(45)
  name            String?  @db.VarChar(255)
  department      String?  @db.VarChar(255)
  position        String?  @db.VarChar(255)
  phone           String?  @db.VarChar(45)
  is_active       Boolean?
  created_at      DateTime @db.DateTime(0)
  updated_at      DateTime @db.DateTime(0)
  is_trash        Boolean? @default(false)

  @@index([related_user_id], map: "related_user_id_idx")
  @@index([user_id], map: "user_id_idx")
}

model g_user_skill {
  id         Int      @id @default(autoincrement())
  user_id    BigInt?
  your_skill String?  @db.Text
  need_skill String?  @db.Text
  is_trash   Boolean?
  created_by BigInt?
  updated_by BigInt?
  is_active  Boolean?
  sort_order BigInt?
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_software {
  id         Int      @id @default(autoincrement())
  user_id    BigInt?
  name       String?  @db.VarChar(255)
  level      String?  @db.VarChar(45)
  is_trash   Boolean?
  created_by BigInt?
  updated_by BigInt?
  is_active  Boolean?
  sort_order BigInt?
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_sport {
  id            Int      @id @default(autoincrement())
  user_id       BigInt?
  name          String?  @db.VarChar(255)
  practice_year String?  @db.VarChar(45)
  level         String?  @db.VarChar(100)
  is_trash      Boolean?
  created_by    BigInt?
  updated_by    BigInt?
  is_active     Boolean?
  sort_order    BigInt?
  created_at    DateTime @db.DateTime(0)
  updated_at    DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_stats {
  id                   Int      @id @default(autoincrement())
  user_id              BigInt?  @unique(map: "user_id")
  interview_count      Int?
  interview_duration   Float?   @db.Float
  interview_lead_count Int?
  created_at           DateTime @db.DateTime(0)
  updated_at           DateTime @db.DateTime(0)

  @@index([user_id], map: "user_id_idx")
}

model g_user_training {
  id             Int       @id @default(autoincrement())
  user_id        BigInt?
  name           String?   @db.VarChar(255)
  location       String?   @db.VarChar(255)
  school_name    String?   @db.VarChar(255)
  learning_date  DateTime? @db.DateTime(0)
  learning_time  String?   @db.VarChar(255)
  learning_unit  String?   @db.VarChar(255)
  is_trash       Boolean?
  created_by     BigInt?
  updated_by     BigInt?
  is_active      Boolean?
  sort_order     BigInt?
  created_at     DateTime  @db.DateTime(0)
  updated_at     DateTime  @db.DateTime(0)
  learning_skill String?   @db.VarChar(255)

  @@index([user_id], map: "user_id_idx")
}

model g_user_work {
  id                     Int       @id @default(autoincrement())
  user_id                BigInt?
  organization_name      String?   @db.VarChar(255)
  organization_area      String?   @db.VarChar(255)
  position_name          String?   @db.VarChar(255)
  position_role          String?   @db.VarChar(255)
  award                  String?   @db.Text
  main_salary            Float?    @db.Float
  bonus_salary           Float?    @db.Float
  over_salary            Float?    @db.Float
  other_salary           Float?    @db.Float
  total_salary           Float?    @db.Float
  phone_salary           Float?    @db.Float
  transport_salary       Float?    @db.Float
  in_date                DateTime? @db.Date
  out_date               DateTime? @db.Date
  director_name          String?   @db.VarChar(255)
  director_position_name String?   @db.VarChar(255)
  director_phone         String?   @db.VarChar(45)
  enjoy                  String?   @db.Text
  un_enjoy               String?   @db.Text
  out_cause              String?   @db.Text
  created_by             BigInt?
  updated_by             BigInt?
  is_active              Boolean?
  is_trash               Boolean?
  sort_order             BigInt?
  created_at             DateTime  @db.DateTime(0)
  updated_at             DateTime  @db.DateTime(0)
  is_ndsh                Int?      @db.TinyInt

  @@index([user_id], map: "user_id_idx")
}

model g_user_work_time {
  id              Int       @id @default(autoincrement())
  name            String?   @db.VarChar(255)
  is_shift        Boolean?  @default(true)
  start_at        DateTime? @db.Time(0)
  end_at          DateTime? @db.Time(0)
  start_at_second DateTime? @db.Time(0)
  end_at_second   DateTime? @db.Time(0)
  created_at      DateTime  @db.DateTime(0)
  updated_at      DateTime  @db.DateTime(0)
  branch_id       Int?
  duration        Int?
}

model g_user_work_type {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar(255)
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)
}

model good_parent_attributes {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  good_parent_id Int?
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  name           String?   @db.VarChar(255)
  body           String?   @db.VarChar(500)
  image          String?   @db.VarChar(255)
  type_id        Int?
}

model good_parents {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  name            String    @db.VarChar(45)
  image_path      String?   @db.VarChar(255)
  is_shop         Int       @default(1) @db.TinyInt
  body_text       String?   @db.Text
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  slug            String?   @db.VarChar(255)
  mn_name         String?
  mn_body_text    String?   @db.Text
  is_show_in_site Boolean   @default(false)
}

model good_sizes {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  name       String    @db.VarChar(45)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model good_types {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  name       String?   @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  body_text  String?   @db.Text
}

model goods {
  id                Int       @id @default(autoincrement()) @db.UnsignedInt
  name              String?   @db.VarChar(255)
  sort_order        Int?
  is_active         Int       @default(1) @db.TinyInt
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
  price             Float     @db.Float
  parent_good_id    Int
  size_id           Int
  type_id           Int
  image_path        String?   @db.VarChar(255)
  is_available_shop Boolean   @default(true)
  introduction_pdf  String?
}

model invoice {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  course_id         Int?
  description       String?   @db.VarChar(800)
  user_id           Int?
  main_amount       Int       @default(0)
  paid_amount       Int       @default(0)
  discount          Int       @default(0)
  hash              String
  number            String
  qpay_json         String?
  account_bank_name String?
  account_number    String?
  amount            String?
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model invoice_items {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  good_id         Int?
  invoice_id      Int?
  order_id        Int?
  unit_price      Float?    @db.Float
  quantity        Int?
  total_price     Int?
  organization_id Int?
  user_id         Int?
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  phone           String?   @db.VarChar(25)
}

model invoices {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  order_id        Int
  user_id         Float?
  organization_id Float?
  number          String    @db.VarChar(45)
  grand_total     Float     @default(0) @db.Float
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  is_paid         Int?      @default(0) @db.TinyInt
  hash            String?   @db.VarChar(50)
  qpay_json       String?   @db.Text
  phone           String?   @db.VarChar(25)
  approve_code    String?   @db.VarChar(25)
  is_approved     Boolean   @default(false)
  active_time     DateTime  @db.DateTime(0)
}

model job_position {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model lesson {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  topic_id        Int?
  free_to_view    Boolean   @default(false)
  name            String
  video_name      String?
  video_link      String?
  description     String?   @db.VarChar(1800)
  information     String?   @db.VarChar(1800)
  full_text       String?   @db.Text
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  created_user_id Int?

  @@index([created_user_id], map: "lesson_created_user_id_index")
}

model menu_items {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  menu_id    Int?      @db.UnsignedInt
  title      String
  url        String
  target     String    @default("_self")
  icon_class String?
  color      String?
  parent_id  Int?
  order      Int
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  route      String?
  parameters String?   @db.Text
  menus      menus?    @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "menu_items_menu_id_foreign")

  @@index([menu_id], map: "menu_items_menu_id_foreign")
}

model menus {
  id         Int          @id @default(autoincrement()) @db.UnsignedInt
  name       String       @unique(map: "menus_name_unique")
  created_at DateTime?    @db.Timestamp(0)
  updated_at DateTime?    @db.Timestamp(0)
  menu_items menu_items[]
}

model messages {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  name       String?   @db.VarChar(50)
  email      String?   @db.VarChar(50)
  message    String?   @db.Text
  subject    String?   @db.VarChar(50)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String
  batch     Int
}

model order_items {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  good_id     Int?
  quantity    Int?
  unit_price  Float?    @db.Float
  total_price Float?    @db.Float
  order_id    Int?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  phone       String?   @db.VarChar(25)
}

model order_status {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model order_status_history {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  order_id    Int?
  status_id   Int?
  status_name Int?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model orders {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id          Int?
  organization_id  Int?
  is_payed         Int?      @default(0) @db.TinyInt
  status_id        Int?
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
  number           String    @db.VarChar(45)
  phone            String?   @db.VarChar(25)
  approve_code     String?   @db.VarChar(25)
  address          String?
  griner_type      String?
  receiver_name    String?
  company_name     String?
  company_register String?
  is_approved      Boolean   @default(false)
  active_time      DateTime  @db.DateTime(0)
  grinder_type     Int?
  total_price      Float?
  total_quantity   Float?
  total_good       Float?
}

model organizations {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  name        String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model our_teams {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  firstname     String?   @db.VarChar(50)
  lastname      String?   @db.VarChar(50)
  insta_link    String?   @db.VarChar(255)
  job_title     String?   @db.VarChar(50)
  profile_image String?   @db.VarChar(255)
  deleted_at    DateTime? @db.Timestamp(0)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
}

model page_card {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  section_id      Int
  order           Int
  is_active       Boolean   @default(true)
  name            String?   @db.VarChar(255)
  image           String?   @db.VarChar(255)
  link            String?   @db.VarChar(255)
  description     String?   @db.VarChar(1800)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  created_user_id Int?

  @@index([created_user_id], map: "page_card_created_user_id_index")
}

model page_section {
  id                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  order                  Int
  is_before_main_content Boolean
  page_name              String    @db.VarChar(255)
  name                   String    @db.VarChar(255)
  image                  String?   @db.VarChar(255)
  link                   String?   @db.VarChar(255)
  description            String?   @db.VarChar(1800)
  created_at             DateTime? @db.Timestamp(0)
  updated_at             DateTime? @db.Timestamp(0)
  created_user_id        Int?

  @@index([created_user_id], map: "page_section_created_user_id_index")
}

model pages {
  id               Int          @id @default(autoincrement()) @db.UnsignedInt
  author_id        Int
  title            String
  excerpt          String?      @db.Text
  body             String?      @db.Text
  image            String?
  slug             String       @unique(map: "pages_slug_unique")
  meta_description String?      @db.Text
  meta_keywords    String?      @db.Text
  status           pages_status @default(INACTIVE)
  created_at       DateTime?    @db.Timestamp(0)
  updated_at       DateTime?    @db.Timestamp(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model password_resets {
  email      String
  token      String
  created_at DateTime? @db.Timestamp(0)

  @@index([email], map: "password_resets_email_index")
  @@ignore
}

model payments {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  order_id    Int?
  total       Float?    @db.Float
  description String?   @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  invoice_id  Int?
}

model permission_role {
  permission_id BigInt      @db.UnsignedBigInt
  role_id       BigInt      @db.UnsignedBigInt
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "permission_role_permission_id_foreign")
  roles         roles       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "permission_role_role_id_foreign")

  @@id([permission_id, role_id])
  @@index([permission_id], map: "permission_role_permission_id_index")
  @@index([role_id], map: "permission_role_role_id_index")
}

model permissions {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  key             String
  table_name      String?
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  permission_role permission_role[]

  @@index([key], map: "permissions_key_index")
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String
  tokenable_id   BigInt    @db.UnsignedBigInt
  name           String
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model posts {
  id               Int          @id @default(autoincrement()) @db.UnsignedInt
  author_id        Int
  category_id      Int?
  title            String
  seo_title        String?
  excerpt          String?      @db.Text
  body             String       @db.Text
  image            String?
  slug             String       @unique(map: "posts_slug_unique")
  meta_description String?      @db.Text
  meta_keywords    String?      @db.Text
  status           posts_status @default(DRAFT)
  featured         Boolean      @default(false)
  created_at       DateTime?    @db.Timestamp(0)
  updated_at       DateTime?    @db.Timestamp(0)
}

model punch_log {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id       Int
  branch_id     Int
  device_id     String    @db.VarChar(40)
  lat           String    @db.VarChar(40)
  lng           String    @db.VarChar(40)
  day_date      DateTime  @db.Date
  time          DateTime  @db.DateTime(0)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  punch_type    Int?
  end_time      DateTime? @db.DateTime(0)
  work_duration Int?
  image_path    String?   @db.VarChar(400)
}

model real_good {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name            String
  bean_id         Int?
  bean_name       String?
  package_id      Int?
  package_name    String?
  unit_price      Decimal?  @db.Decimal(16, 2)
  sanhuu_dugaar   String?
  created_at      DateTime? @default(now()) @db.DateTime(0)
  updated_at      DateTime? @default(now()) @db.DateTime(0)
  created_user_id Int?
  updated_user_id Int?

  @@index([created_user_id], map: "real_good_created_user_id_index")
  @@index([updated_user_id], map: "real_good_updated_user_id_index")
}

model real_good_transaction {
  id                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  branch_id              Int
  to_branch_id           Int?
  related_transaction_id Int?
  real_good_id           Int
  price_avg              Decimal?  @db.Decimal(8, 2)
  credit_count           Float?
  debit_count            Float?
  confirmed_price_avg    Decimal?  @db.Decimal(8, 2)
  confirmed_credit_count Float?
  confirmed_debit_count  Float?
  is_confirm             Boolean   @default(false)
  barimt_id              Int
  created_at             DateTime? @default(now()) @db.DateTime(0)
  updated_at             DateTime? @default(now()) @db.DateTime(0)
  created_user_id        Int?
  updated_user_id        Int?

  @@index([created_user_id], map: "real_good_transaction_created_user_id_index")
  @@index([updated_user_id], map: "real_good_transaction_updated_user_id_index")
}

model roles {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name            String            @unique(map: "roles_name_unique")
  display_name    String
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  permission_role permission_role[]
  user_roles      user_roles[]
  users           users[]
}

model service {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  category_id Int
  name        String?
  description String?
  body        String?   @db.Text
  image_path  String?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model service_category {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name        String?
  description String?
  body        String?   @db.Text
  image_path  String?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model settings {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  key          String  @unique(map: "settings_key_unique")
  display_name String
  value        String? @db.Text
  details      String? @db.Text
  type         String
  order        Int     @default(1)
  group        String?
}

model sf_guard_group {
  id              BigInt   @id @default(autoincrement())
  name            String?  @unique(map: "name") @db.VarChar(255)
  description     String?  @db.Text
  organization_id Int?
  cheif_id        BigInt?
  created_at      DateTime @default(now()) @db.DateTime(0)
  updated_at      DateTime @default(now()) @db.DateTime(0)

  @@index([cheif_id], map: "cheif_id_idx")
  @@index([organization_id], map: "organization_id_idx")
}

model sf_guard_user {
  id                   BigInt    @id @default(autoincrement())
  first_name           String?   @db.VarChar(255)
  last_name            String?   @db.VarChar(255)
  email_address        String?   @db.VarChar(255)
  username             String?   @db.VarChar(128)
  is_active            Boolean?  @default(true)
  is_confirm           Boolean?  @default(false)
  phone                String?   @db.VarChar(50)
  address              String?   @db.VarChar(255)
  profile_image        String?   @db.VarChar(255)
  organization_id      Int?
  sector_id            Int?
  department_id        Int?
  position_id          Int?
  nas                  Int?
  huis                 String?   @db.VarChar(255)
  ndd                  String?   @db.VarChar(50)
  emdd                 String?   @db.VarChar(50)
  ajillasan_jil        String?   @db.VarChar(50)
  register_number      String?   @db.VarChar(50)
  geree_ehelsen        DateTime? @db.Date
  geree_duusah         DateTime? @db.Date
  kart_dugaar          String?   @db.VarChar(50)
  dans_dugaar          String?   @db.VarChar(50)
  created_at           DateTime  @db.DateTime(0)
  updated_at           DateTime  @db.DateTime(0)
  birthday             DateTime? @db.Date
  alban_tushaal_id     Int?
  job_type_id          Int?
  position_name        String?   @db.VarChar(255)
  group_reason         String?   @db.Text
  command_number       String?   @db.VarChar(50)
  description          String?   @db.Text
  status_id            Int?
  out_category_id      Int?
  out_text             String?   @db.VarChar(400)
  work_time_id         Int?
  out_category_type_id Int?
  work_type_id         Int?
  department_name      String?   @db.VarChar(255)
  group_name           String?   @db.VarChar(255)
  employee_id          Int?
  employee_code        String?   @db.VarChar(40)
  password             String?   @db.VarChar(45)
  degree_name          String?
  major_name           String?
  atk                  Int?
  yamat                Int?
  in_date              DateTime? @db.Date
  contract_number      String?
  work_year_bonus      Int?
  food_bonus           Int?
  road_bonus           Int?
  distance_work        Int?
  out_date             DateTime? @db.Date
  fb_user_id           String?   @db.VarChar(255)

  @@index([alban_tushaal_id], map: "alban_tushaal_id")
  @@index([department_id], map: "department_id_idx")
  @@index([id], map: "id")
  @@index([is_active], map: "is_active_idx_idx")
  @@index([job_type_id], map: "job_type_id")
  @@index([organization_id], map: "organization_id_idx")
  @@index([position_id], map: "position_id_idx")
  @@index([sector_id], map: "sector_id_idx")
  @@index([status_id], map: "sf_guard_user_status_id_user_status_id")
  @@index([work_time_id], map: "sf_guard_user_work_time_id_g_user_work_time_id")
  @@index([work_type_id], map: "sf_guard_user_work_type_id_g_user_work_type_id")
}

model sf_guard_user_additional_time {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  branch_id         Int?
  service_id        Int?
  approved_user_id  Int?
  user_id           Int?
  udur_tsag_ajil    Int       @default(0)
  iluu_tsag         Int       @default(0)
  udur_tsag_amralt  Int       @default(0)
  shunu_tsag_ajil   Int       @default(0)
  shunu_tsag_amralt Int       @default(0)
  udur_tsag_bayar   Int       @default(0)
  shunu_tsag_bayar  Int       @default(0)
  sul_zogsolt       Int       @default(0)
  day_zam_tsag      Int       @default(0)
  travel_zam_tsag   Int       @default(0)
  work_duration     Int       @default(0)
  iluu_tsag_night   Int       @default(0)
  iluu_tsag_day     Int       @default(0)
  day_date          DateTime? @db.Date
  start_at_punch    DateTime? @db.DateTime(0)
  end_at_punch      DateTime? @db.DateTime(0)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model sf_guard_user_branch {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         Int
  branch_id       Int
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  start_at        String?   @db.VarChar(40)
  end_at          String?   @db.VarChar(40)
  start_at_second String?   @db.VarChar(40)
  end_at_second   String?   @db.VarChar(40)
  devices         String?   @db.VarChar(400)

  @@unique([branch_id, user_id], map: "sf_guard_user_branch_branch_id_user_id_unique")
}

model sf_guard_user_device_on_branch {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     Int
  branch_id   Int
  mac_address String
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model sf_guard_user_group {
  user_id         BigInt
  group_id        BigInt
  organization_id Int?
  role            String?  @db.VarChar(50)
  created_at      DateTime @db.DateTime(0)
  updated_at      DateTime @db.DateTime(0)

  @@id([user_id, group_id])
  @@index([group_id], map: "sf_guard_user_group_group_id_sf_guard_group_id")
}

model sf_guard_user_work_day_log {
  id                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id               Int
  branch_id             Int
  day_date              DateTime? @db.Date
  start_at              DateTime? @db.DateTime(0)
  end_at                DateTime? @db.DateTime(0)
  start_at_second       DateTime? @db.DateTime(0)
  end_at_second         DateTime? @db.DateTime(0)
  start_at_punch        DateTime? @db.DateTime(0)
  end_at_punch          DateTime? @db.DateTime(0)
  start_at_second_punch DateTime? @db.DateTime(0)
  end_at_second_punch   DateTime? @db.DateTime(0)
  work_duration         Float     @default(0.00)
  work_duration_second  Float     @default(0.00)
  work_duration_sum     Float     @default(0.00)
  iluu_tsag             Float     @default(0.00)
  iluu_tsag_approved    Float     @default(0.00)
  is_hotsorson          Boolean   @default(false)
  is_ert_tarsan         Boolean   @default(false)
  status_id             Int?
  must_punch            Boolean   @default(false)
  work_time_multi       Float     @default(0.00)
  created_at            DateTime? @db.Timestamp(0)
  updated_at            DateTime? @db.Timestamp(0)
  created_by            Int
  work_time_id          Int?
}

model sms_log {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id           Int?
  message_id        Int?
  code              String?
  text              String?
  phone             String?
  active_time       DateTime  @db.DateTime(0)
  result            String    @db.Text
  result_data       String    @db.Text
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
  order_information String?   @db.Text
}

model stock_balances {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  stock_id   Int?
  good_id    Int?
  unit_price Float?    @db.Float
  quantity   Int?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model stock_goods {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  stock_id    Int?
  good_id     Int?
  unit_price  Float?    @db.Float
  quantity    Float?    @db.Float
  total_price Float?    @db.Float
  deleted_at  DateTime? @db.Timestamp(0)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model tags {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name            String    @db.VarChar(255)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  created_user_id Int?

  @@index([created_user_id], map: "tags_created_user_id_index")
}

model teacher {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  full_name    String    @db.VarChar(255)
  organization String    @db.VarChar(255)
  position     String    @db.VarChar(255)
  major        String    @db.VarChar(400)
  image        String?   @db.VarChar(255)
  course_count Int?
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model topic {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  course_id       Int?
  name            String
  exam_id         Int?
  description     String?   @db.VarChar(1800)
  information     String?   @db.VarChar(1800)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  created_user_id Int?

  @@index([created_user_id], map: "topic_created_user_id_index")
}

model transaction_items {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  good_id        Int?
  quantity       Float?    @db.Float
  stock_id       Int?
  to_stock_id    Int?
  user_id        Int?
  to_user_id     Int?
  transaction_at DateTime? @db.DateTime(0)
  is_active      Int?      @default(1) @db.TinyInt
  unit_price     Float?    @db.Float
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  transaction_id Int?
  type           Int?

  @@unique([good_id, transaction_id], map: "test")
}

model transaction_types {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  name       String    @db.VarChar(45)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model transactions {
  id                     Int       @id @default(autoincrement()) @db.UnsignedInt
  number                 String    @db.VarChar(45)
  user_id                Int?
  to_user_id             Int?
  stock_id               Int
  related_stock_id       Int?
  transaction_at         DateTime  @default(now()) @db.Timestamp(0)
  created_at             DateTime? @db.Timestamp(0)
  updated_at             DateTime? @db.Timestamp(0)
  is_confirmed           Int?
  item_count             Float?    @db.Float
  type                   Int
  related_transaction_id Int?
  order_id               Int?
  description            String?   @db.VarChar(255)
}

model translations {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  table_name  String
  column_name String
  foreign_key Int       @db.UnsignedInt
  locale      String
  value       String    @db.Text
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)

  @@unique([table_name, column_name, foreign_key, locale], map: "translations_table_name_column_name_foreign_key_locale_unique")
}

model tsalin_main_report {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  start_date     DateTime? @db.Date
  end_date       DateTime? @db.Date
  description    String?
  created_hr     Int?
  approved_chief Int?
  approved_ceo   Int?
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
}

model tsalin_report {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  main_report_id      Int?
  start_date          DateTime? @db.Date
  end_date            DateTime? @db.Date
  employee_id         Int?
  employee_name       String?
  register_number     String?
  phone               String?
  department_id       String?
  department_name     String?
  heltes_id           String?
  heltes_name         String?
  organization_id     String?
  organization_name   String?
  udur_tsag_ajil      Int       @default(0)
  iluu_tsag           Int       @default(0)
  udur_tsag_amralt    Int       @default(0)
  shunu_tsag_ajil     Int       @default(0)
  shunu_tsag_amralt   Int       @default(0)
  udur_tsag_bayar     Int       @default(0)
  shunu_tsag_bayar    Int       @default(0)
  sul_zogsolt         Int       @default(0)
  day_zam_tsag        Int       @default(0)
  travel_zam_tsag     Int       @default(0)
  work_duration       Int       @default(0)
  iluu_tsag_night     Int       @default(0)
  iluu_tsag_day       Int       @default(0)
  worked_day_count    Int       @default(0)
  must_work_day_count Int       @default(0)
  sum                 Int       @default(0)
  created_hr          Int?
  approved_chief      Int?
  approved_ceo        Int?
  description         String?
  created_at          DateTime? @db.Timestamp(0)
  updated_at          DateTime? @db.Timestamp(0)
  branch_id           Int?
}

model tsalin_report_daily_report {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id       Int?
  employee_name     String?
  register_number   String?
  phone             String?
  department_id     String?
  department_name   String?
  heltes_id         String?
  heltes_name       String?
  organization_id   String?
  organization_name String?
  day_date          DateTime? @db.Date
  udur_tsag_ajil    Int       @default(0)
  iluu_tsag         Int       @default(0)
  udur_tsag_amralt  Int       @default(0)
  shunu_tsag_ajil   Int       @default(0)
  shunu_tsag_amralt Int       @default(0)
  udur_tsag_bayar   Int       @default(0)
  shunu_tsag_bayar  Int       @default(0)
  sul_zogsolt       Int       @default(0)
  day_zam_tsag      Int       @default(0)
  travel_zam_tsag   Int       @default(0)
  shift             Int       @default(0)
  work_duration     Int       @default(0)
  iluu_tsag_night   Int       @default(0)
  iluu_tsag_day     Int       @default(0)
  start_at          DateTime? @db.DateTime(0)
  end_at            DateTime? @db.DateTime(0)
  work_start_at     DateTime? @db.DateTime(0)
  work_end_at       DateTime? @db.DateTime(0)
  created_hr        Int?
  approved_chief    Int?
  approved_ceo      Int?
  description       String?
  punch_logs        String?
  main_report_id    Int?
  sum               Int       @default(0)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
  branch_id         Int?
}

model tsalin_report_daily_report_logs {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id   Int
  branch_id     Int
  device_id     String    @db.VarChar(40)
  lat           String    @db.VarChar(40)
  lng           String    @db.VarChar(40)
  lat_end       String    @db.VarChar(40)
  lng_end       String    @db.VarChar(40)
  distance      String    @db.VarChar(40)
  day_date      DateTime  @db.Date
  time          DateTime  @db.DateTime(0)
  end_time      DateTime? @db.DateTime(0)
  work_duration Int?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  punch_type    Int?
}

model tsalin_report_detail_logs {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id   Int
  branch_id     Int
  device_id     String    @db.VarChar(40)
  lat           String    @db.VarChar(40)
  lng           String    @db.VarChar(40)
  lat_end       String    @db.VarChar(40)
  lng_end       String    @db.VarChar(40)
  distance      String    @db.VarChar(40)
  day_date      DateTime  @db.Date
  time          DateTime  @db.DateTime(0)
  end_time      DateTime? @db.DateTime(0)
  work_duration Int?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  punch_type    Int?
}

model tsalin_report_details {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tsalin_report_id  Int?
  employee_id       Int?
  employee_name     String?
  register_number   String?
  phone             String?
  department_id     String?
  department_name   String?
  heltes_id         String?
  heltes_name       String?
  organization_id   String?
  organization_name String?
  day_date          DateTime? @db.Date
  udur_tsag_ajil    Int       @default(0)
  iluu_tsag         Int       @default(0)
  udur_tsag_amralt  Int       @default(0)
  shunu_tsag_ajil   Int       @default(0)
  shunu_tsag_amralt Int       @default(0)
  udur_tsag_bayar   Int       @default(0)
  shunu_tsag_bayar  Int       @default(0)
  sul_zogsolt       Int       @default(0)
  day_zam_tsag      Int       @default(0)
  travel_zam_tsag   Int       @default(0)
  shift             Int       @default(0)
  work_duration     Int       @default(0)
  iluu_tsag_night   Int       @default(0)
  iluu_tsag_day     Int       @default(0)
  start_at          DateTime? @db.DateTime(0)
  end_at            DateTime? @db.DateTime(0)
  work_start_at     DateTime? @db.DateTime(0)
  work_end_at       DateTime? @db.DateTime(0)
  created_hr        Int?
  approved_chief    Int?
  approved_ceo      Int?
  description       String?
  punch_logs        String?
  main_report_id    Int?
  sum               Int       @default(0)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
  branch_id         Int?
}

model user_course {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  course_id    Int?
  user_id      Int?
  paid_amount  Int       @default(0)
  invoice_id   Int?
  is_end       Int?
  doctor_point Int       @default(0)
  certificate  String?   @db.Text
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model user_model_settings {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id      Int
  data_type_id Int
  details      String    @db.Text
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model user_roles {
  user_id BigInt @db.UnsignedBigInt
  role_id BigInt @db.UnsignedBigInt
  roles   roles  @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "user_roles_role_id_foreign")
  users   users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "user_roles_user_id_foreign")

  @@id([user_id, role_id])
  @@index([role_id], map: "user_roles_role_id_index")
  @@index([user_id], map: "user_roles_user_id_index")
}

model user_wallet {
  id                 BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id            Int?
  total_amount       Int?
  total_web_point    Float?
  total_doctor_point Float?
  created_at         DateTime? @db.Timestamp(0)
  updated_at         DateTime? @db.Timestamp(0)
}

model user_wallet_transaction {
  id                  BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  user_id             Int?
  credit_doctor_point Float?
  debit_doctor_point  Float?
  credit_web_point    Float?
  debit_web_point     Float?
  credit_amount       Float?
  debit_amount        Float?
  type                user_wallet_transaction_type   @default(doctor_point)
  status              user_wallet_transaction_status @default(Pending)
  created_at          DateTime?                      @db.Timestamp(0)
  updated_at          DateTime?                      @db.Timestamp(0)
}

model users {
  id                BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  role_id           BigInt?      @db.UnsignedBigInt
  name              String
  email             String       @unique(map: "users_email_unique")
  avatar            String?      @default("users/default.png")
  email_verified_at DateTime?    @db.Timestamp(0)
  password          String
  remember_token    String?      @db.VarChar(100)
  settings          String?      @db.Text
  created_at        DateTime?    @db.Timestamp(0)
  updated_at        DateTime?    @db.Timestamp(0)
  organization_id   Int?
  branch_id         Int?
  last_name         String?      @db.VarChar(45)
  phone             String?      @db.VarChar(45)
  employee_code     String?      @db.VarChar(40)
  degree_name       String?
  position_name     String?
  major_name        String?
  atk               Int?
  yamat             Int?
  in_date           DateTime?    @db.Date
  contract_number   String?
  address           String?
  work_year_bonus   Int?
  food_bonus        Int?
  road_bonus        Int?
  distance_work     Int?
  out_date          DateTime?    @db.Date
  user_roles        user_roles[]
  roles             roles?       @relation(fields: [role_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "users_role_id_foreign")

  @@index([role_id], map: "users_role_id_foreign")
}

model work_at_roc {
  id                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  first_name             String?
  last_name              String?
  phone                  String?
  email                  String?
  major                  String?
  position_id            Int?
  status_id              Int?
  degree_name            String?
  birth_day              DateTime? @db.Date
  additional_information String?   @db.Text
  created_at             DateTime? @db.Timestamp(0)
  updated_at             DateTime? @db.Timestamp(0)
}

model work_at_roc_status {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model work_day_plan {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id      Int?
  branch_id    Int?
  work_time_id Int?
  day_date     DateTime? @db.Date
  created_by   Int?
  description  String?
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model work_position {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name        String?
  description String?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model work_status {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name            String    @db.VarChar(255)
  is_working      Boolean   @default(true)
  must_punch      Boolean   @default(true)
  work_time_multi Float     @default(0.00)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
}

enum coffee_bean_logs_type {
  ROAST
  SALE
  OTHER
}

enum user_wallet_transaction_type {
  doctor_point
  web_point
  amount
}

enum pages_status {
  ACTIVE
  INACTIVE
}

enum user_wallet_transaction_status {
  Pending
  Wait
  Active
}

enum posts_status {
  PUBLISHED
  DRAFT
  PENDING
}
